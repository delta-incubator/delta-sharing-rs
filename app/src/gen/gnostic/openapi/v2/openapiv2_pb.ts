// Copyright 2020 Google LLC. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// THIS FILE IS AUTOMATICALLY GENERATED.

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file gnostic/openapi/v2/openapiv2.proto (package gnostic.openapi.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any as Any$1 } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file gnostic/openapi/v2/openapiv2.proto.
 */
export const file_gnostic_openapi_v2_openapiv2: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_any]);

/**
 * @generated from message gnostic.openapi.v2.AdditionalPropertiesItem
 */
export type AdditionalPropertiesItem = Message<"gnostic.openapi.v2.AdditionalPropertiesItem"> & {
  /**
   * @generated from oneof gnostic.openapi.v2.AdditionalPropertiesItem.oneof
   */
  oneof: {
    /**
     * @generated from field: gnostic.openapi.v2.Schema schema = 1;
     */
    value: Schema;
    case: "schema";
  } | {
    /**
     * @generated from field: bool boolean = 2;
     */
    value: boolean;
    case: "boolean";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message gnostic.openapi.v2.AdditionalPropertiesItem.
 * Use `create(AdditionalPropertiesItemSchema)` to create a new message.
 */
export const AdditionalPropertiesItemSchema: GenMessage<AdditionalPropertiesItem> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 0);

/**
 * @generated from message gnostic.openapi.v2.Any
 */
export type Any = Message<"gnostic.openapi.v2.Any"> & {
  /**
   * @generated from field: google.protobuf.Any value = 1;
   */
  value?: Any$1;

  /**
   * @generated from field: string yaml = 2;
   */
  yaml: string;
};

/**
 * Describes the message gnostic.openapi.v2.Any.
 * Use `create(AnySchema)` to create a new message.
 */
export const AnySchema: GenMessage<Any> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 1);

/**
 * @generated from message gnostic.openapi.v2.ApiKeySecurity
 */
export type ApiKeySecurity = Message<"gnostic.openapi.v2.ApiKeySecurity"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string in = 3;
   */
  in: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 5;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.ApiKeySecurity.
 * Use `create(ApiKeySecuritySchema)` to create a new message.
 */
export const ApiKeySecuritySchema: GenMessage<ApiKeySecurity> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 2);

/**
 * @generated from message gnostic.openapi.v2.BasicAuthenticationSecurity
 */
export type BasicAuthenticationSecurity = Message<"gnostic.openapi.v2.BasicAuthenticationSecurity"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 3;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.BasicAuthenticationSecurity.
 * Use `create(BasicAuthenticationSecuritySchema)` to create a new message.
 */
export const BasicAuthenticationSecuritySchema: GenMessage<BasicAuthenticationSecurity> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 3);

/**
 * @generated from message gnostic.openapi.v2.BodyParameter
 */
export type BodyParameter = Message<"gnostic.openapi.v2.BodyParameter"> & {
  /**
   * A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
   *
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * The name of the parameter.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Determines the location of the parameter.
   *
   * @generated from field: string in = 3;
   */
  in: string;

  /**
   * Determines whether or not this parameter is required or optional.
   *
   * @generated from field: bool required = 4;
   */
  required: boolean;

  /**
   * @generated from field: gnostic.openapi.v2.Schema schema = 5;
   */
  schema?: Schema;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 6;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.BodyParameter.
 * Use `create(BodyParameterSchema)` to create a new message.
 */
export const BodyParameterSchema: GenMessage<BodyParameter> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 4);

/**
 * Contact information for the owners of the API.
 *
 * @generated from message gnostic.openapi.v2.Contact
 */
export type Contact = Message<"gnostic.openapi.v2.Contact"> & {
  /**
   * The identifying name of the contact person/organization.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The URL pointing to the contact information.
   *
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * The email address of the contact person/organization.
   *
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 4;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Contact.
 * Use `create(ContactSchema)` to create a new message.
 */
export const ContactSchema: GenMessage<Contact> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 5);

/**
 * @generated from message gnostic.openapi.v2.Default
 */
export type Default = Message<"gnostic.openapi.v2.Default"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny additional_properties = 1;
   */
  additionalProperties: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Default.
 * Use `create(DefaultSchema)` to create a new message.
 */
export const DefaultSchema: GenMessage<Default> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 6);

/**
 * One or more JSON objects describing the schemas being consumed and produced by the API.
 *
 * @generated from message gnostic.openapi.v2.Definitions
 */
export type Definitions = Message<"gnostic.openapi.v2.Definitions"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedSchema additional_properties = 1;
   */
  additionalProperties: NamedSchema[];
};

/**
 * Describes the message gnostic.openapi.v2.Definitions.
 * Use `create(DefinitionsSchema)` to create a new message.
 */
export const DefinitionsSchema: GenMessage<Definitions> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 7);

/**
 * @generated from message gnostic.openapi.v2.Document
 */
export type Document = Message<"gnostic.openapi.v2.Document"> & {
  /**
   * The Swagger version of this document.
   *
   * @generated from field: string swagger = 1;
   */
  swagger: string;

  /**
   * @generated from field: gnostic.openapi.v2.Info info = 2;
   */
  info?: Info;

  /**
   * The host (name or ip) of the API. Example: 'swagger.io'
   *
   * @generated from field: string host = 3;
   */
  host: string;

  /**
   * The base path to the API. Example: '/api'.
   *
   * @generated from field: string base_path = 4;
   */
  basePath: string;

  /**
   * The transfer protocol of the API.
   *
   * @generated from field: repeated string schemes = 5;
   */
  schemes: string[];

  /**
   * A list of MIME types accepted by the API.
   *
   * @generated from field: repeated string consumes = 6;
   */
  consumes: string[];

  /**
   * A list of MIME types the API can produce.
   *
   * @generated from field: repeated string produces = 7;
   */
  produces: string[];

  /**
   * @generated from field: gnostic.openapi.v2.Paths paths = 8;
   */
  paths?: Paths;

  /**
   * @generated from field: gnostic.openapi.v2.Definitions definitions = 9;
   */
  definitions?: Definitions;

  /**
   * @generated from field: gnostic.openapi.v2.ParameterDefinitions parameters = 10;
   */
  parameters?: ParameterDefinitions;

  /**
   * @generated from field: gnostic.openapi.v2.ResponseDefinitions responses = 11;
   */
  responses?: ResponseDefinitions;

  /**
   * @generated from field: repeated gnostic.openapi.v2.SecurityRequirement security = 12;
   */
  security: SecurityRequirement[];

  /**
   * @generated from field: gnostic.openapi.v2.SecurityDefinitions security_definitions = 13;
   */
  securityDefinitions?: SecurityDefinitions;

  /**
   * @generated from field: repeated gnostic.openapi.v2.Tag tags = 14;
   */
  tags: Tag[];

  /**
   * @generated from field: gnostic.openapi.v2.ExternalDocs external_docs = 15;
   */
  externalDocs?: ExternalDocs;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 16;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Document.
 * Use `create(DocumentSchema)` to create a new message.
 */
export const DocumentSchema: GenMessage<Document> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 8);

/**
 * @generated from message gnostic.openapi.v2.Examples
 */
export type Examples = Message<"gnostic.openapi.v2.Examples"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny additional_properties = 1;
   */
  additionalProperties: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Examples.
 * Use `create(ExamplesSchema)` to create a new message.
 */
export const ExamplesSchema: GenMessage<Examples> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 9);

/**
 * information about external documentation
 *
 * @generated from message gnostic.openapi.v2.ExternalDocs
 */
export type ExternalDocs = Message<"gnostic.openapi.v2.ExternalDocs"> & {
  /**
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 3;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.ExternalDocs.
 * Use `create(ExternalDocsSchema)` to create a new message.
 */
export const ExternalDocsSchema: GenMessage<ExternalDocs> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 10);

/**
 * A deterministic version of a JSON Schema object.
 *
 * @generated from message gnostic.openapi.v2.FileSchema
 */
export type FileSchema = Message<"gnostic.openapi.v2.FileSchema"> & {
  /**
   * @generated from field: string format = 1;
   */
  format: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: gnostic.openapi.v2.Any default = 4;
   */
  default?: Any;

  /**
   * @generated from field: repeated string required = 5;
   */
  required: string[];

  /**
   * @generated from field: string type = 6;
   */
  type: string;

  /**
   * @generated from field: bool read_only = 7;
   */
  readOnly: boolean;

  /**
   * @generated from field: gnostic.openapi.v2.ExternalDocs external_docs = 8;
   */
  externalDocs?: ExternalDocs;

  /**
   * @generated from field: gnostic.openapi.v2.Any example = 9;
   */
  example?: Any;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 10;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.FileSchema.
 * Use `create(FileSchemaSchema)` to create a new message.
 */
export const FileSchemaSchema: GenMessage<FileSchema> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 11);

/**
 * @generated from message gnostic.openapi.v2.FormDataParameterSubSchema
 */
export type FormDataParameterSubSchema = Message<"gnostic.openapi.v2.FormDataParameterSubSchema"> & {
  /**
   * Determines whether or not this parameter is required or optional.
   *
   * @generated from field: bool required = 1;
   */
  required: boolean;

  /**
   * Determines the location of the parameter.
   *
   * @generated from field: string in = 2;
   */
  in: string;

  /**
   * A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * The name of the parameter.
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * allows sending a parameter by name only or with an empty value.
   *
   * @generated from field: bool allow_empty_value = 5;
   */
  allowEmptyValue: boolean;

  /**
   * @generated from field: string type = 6;
   */
  type: string;

  /**
   * @generated from field: string format = 7;
   */
  format: string;

  /**
   * @generated from field: gnostic.openapi.v2.PrimitivesItems items = 8;
   */
  items?: PrimitivesItems;

  /**
   * @generated from field: string collection_format = 9;
   */
  collectionFormat: string;

  /**
   * @generated from field: gnostic.openapi.v2.Any default = 10;
   */
  default?: Any;

  /**
   * @generated from field: double maximum = 11;
   */
  maximum: number;

  /**
   * @generated from field: bool exclusive_maximum = 12;
   */
  exclusiveMaximum: boolean;

  /**
   * @generated from field: double minimum = 13;
   */
  minimum: number;

  /**
   * @generated from field: bool exclusive_minimum = 14;
   */
  exclusiveMinimum: boolean;

  /**
   * @generated from field: int64 max_length = 15;
   */
  maxLength: bigint;

  /**
   * @generated from field: int64 min_length = 16;
   */
  minLength: bigint;

  /**
   * @generated from field: string pattern = 17;
   */
  pattern: string;

  /**
   * @generated from field: int64 max_items = 18;
   */
  maxItems: bigint;

  /**
   * @generated from field: int64 min_items = 19;
   */
  minItems: bigint;

  /**
   * @generated from field: bool unique_items = 20;
   */
  uniqueItems: boolean;

  /**
   * @generated from field: repeated gnostic.openapi.v2.Any enum = 21;
   */
  enum: Any[];

  /**
   * @generated from field: double multiple_of = 22;
   */
  multipleOf: number;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 23;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.FormDataParameterSubSchema.
 * Use `create(FormDataParameterSubSchemaSchema)` to create a new message.
 */
export const FormDataParameterSubSchemaSchema: GenMessage<FormDataParameterSubSchema> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 12);

/**
 * @generated from message gnostic.openapi.v2.Header
 */
export type Header = Message<"gnostic.openapi.v2.Header"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string format = 2;
   */
  format: string;

  /**
   * @generated from field: gnostic.openapi.v2.PrimitivesItems items = 3;
   */
  items?: PrimitivesItems;

  /**
   * @generated from field: string collection_format = 4;
   */
  collectionFormat: string;

  /**
   * @generated from field: gnostic.openapi.v2.Any default = 5;
   */
  default?: Any;

  /**
   * @generated from field: double maximum = 6;
   */
  maximum: number;

  /**
   * @generated from field: bool exclusive_maximum = 7;
   */
  exclusiveMaximum: boolean;

  /**
   * @generated from field: double minimum = 8;
   */
  minimum: number;

  /**
   * @generated from field: bool exclusive_minimum = 9;
   */
  exclusiveMinimum: boolean;

  /**
   * @generated from field: int64 max_length = 10;
   */
  maxLength: bigint;

  /**
   * @generated from field: int64 min_length = 11;
   */
  minLength: bigint;

  /**
   * @generated from field: string pattern = 12;
   */
  pattern: string;

  /**
   * @generated from field: int64 max_items = 13;
   */
  maxItems: bigint;

  /**
   * @generated from field: int64 min_items = 14;
   */
  minItems: bigint;

  /**
   * @generated from field: bool unique_items = 15;
   */
  uniqueItems: boolean;

  /**
   * @generated from field: repeated gnostic.openapi.v2.Any enum = 16;
   */
  enum: Any[];

  /**
   * @generated from field: double multiple_of = 17;
   */
  multipleOf: number;

  /**
   * @generated from field: string description = 18;
   */
  description: string;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 19;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Header.
 * Use `create(HeaderSchema)` to create a new message.
 */
export const HeaderSchema: GenMessage<Header> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 13);

/**
 * @generated from message gnostic.openapi.v2.HeaderParameterSubSchema
 */
export type HeaderParameterSubSchema = Message<"gnostic.openapi.v2.HeaderParameterSubSchema"> & {
  /**
   * Determines whether or not this parameter is required or optional.
   *
   * @generated from field: bool required = 1;
   */
  required: boolean;

  /**
   * Determines the location of the parameter.
   *
   * @generated from field: string in = 2;
   */
  in: string;

  /**
   * A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * The name of the parameter.
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string type = 5;
   */
  type: string;

  /**
   * @generated from field: string format = 6;
   */
  format: string;

  /**
   * @generated from field: gnostic.openapi.v2.PrimitivesItems items = 7;
   */
  items?: PrimitivesItems;

  /**
   * @generated from field: string collection_format = 8;
   */
  collectionFormat: string;

  /**
   * @generated from field: gnostic.openapi.v2.Any default = 9;
   */
  default?: Any;

  /**
   * @generated from field: double maximum = 10;
   */
  maximum: number;

  /**
   * @generated from field: bool exclusive_maximum = 11;
   */
  exclusiveMaximum: boolean;

  /**
   * @generated from field: double minimum = 12;
   */
  minimum: number;

  /**
   * @generated from field: bool exclusive_minimum = 13;
   */
  exclusiveMinimum: boolean;

  /**
   * @generated from field: int64 max_length = 14;
   */
  maxLength: bigint;

  /**
   * @generated from field: int64 min_length = 15;
   */
  minLength: bigint;

  /**
   * @generated from field: string pattern = 16;
   */
  pattern: string;

  /**
   * @generated from field: int64 max_items = 17;
   */
  maxItems: bigint;

  /**
   * @generated from field: int64 min_items = 18;
   */
  minItems: bigint;

  /**
   * @generated from field: bool unique_items = 19;
   */
  uniqueItems: boolean;

  /**
   * @generated from field: repeated gnostic.openapi.v2.Any enum = 20;
   */
  enum: Any[];

  /**
   * @generated from field: double multiple_of = 21;
   */
  multipleOf: number;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 22;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.HeaderParameterSubSchema.
 * Use `create(HeaderParameterSubSchemaSchema)` to create a new message.
 */
export const HeaderParameterSubSchemaSchema: GenMessage<HeaderParameterSubSchema> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 14);

/**
 * @generated from message gnostic.openapi.v2.Headers
 */
export type Headers = Message<"gnostic.openapi.v2.Headers"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedHeader additional_properties = 1;
   */
  additionalProperties: NamedHeader[];
};

/**
 * Describes the message gnostic.openapi.v2.Headers.
 * Use `create(HeadersSchema)` to create a new message.
 */
export const HeadersSchema: GenMessage<Headers> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 15);

/**
 * General information about the API.
 *
 * @generated from message gnostic.openapi.v2.Info
 */
export type Info = Message<"gnostic.openapi.v2.Info"> & {
  /**
   * A unique and precise title of the API.
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * A semantic version number of the API.
   *
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * A longer description of the API. Should be different from the title.  GitHub Flavored Markdown is allowed.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * The terms of service for the API.
   *
   * @generated from field: string terms_of_service = 4;
   */
  termsOfService: string;

  /**
   * @generated from field: gnostic.openapi.v2.Contact contact = 5;
   */
  contact?: Contact;

  /**
   * @generated from field: gnostic.openapi.v2.License license = 6;
   */
  license?: License;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 7;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Info.
 * Use `create(InfoSchema)` to create a new message.
 */
export const InfoSchema: GenMessage<Info> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 16);

/**
 * @generated from message gnostic.openapi.v2.ItemsItem
 */
export type ItemsItem = Message<"gnostic.openapi.v2.ItemsItem"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.Schema schema = 1;
   */
  schema: Schema[];
};

/**
 * Describes the message gnostic.openapi.v2.ItemsItem.
 * Use `create(ItemsItemSchema)` to create a new message.
 */
export const ItemsItemSchema: GenMessage<ItemsItem> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 17);

/**
 * @generated from message gnostic.openapi.v2.JsonReference
 */
export type JsonReference = Message<"gnostic.openapi.v2.JsonReference"> & {
  /**
   * @generated from field: string _ref = 1;
   */
  Ref: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message gnostic.openapi.v2.JsonReference.
 * Use `create(JsonReferenceSchema)` to create a new message.
 */
export const JsonReferenceSchema: GenMessage<JsonReference> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 18);

/**
 * @generated from message gnostic.openapi.v2.License
 */
export type License = Message<"gnostic.openapi.v2.License"> & {
  /**
   * The name of the license type. It's encouraged to use an OSI compatible license.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The URL pointing to the license.
   *
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 3;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.License.
 * Use `create(LicenseSchema)` to create a new message.
 */
export const LicenseSchema: GenMessage<License> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 19);

/**
 * Automatically-generated message used to represent maps of Any as ordered (name,value) pairs.
 *
 * @generated from message gnostic.openapi.v2.NamedAny
 */
export type NamedAny = Message<"gnostic.openapi.v2.NamedAny"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.openapi.v2.Any value = 2;
   */
  value?: Any;
};

/**
 * Describes the message gnostic.openapi.v2.NamedAny.
 * Use `create(NamedAnySchema)` to create a new message.
 */
export const NamedAnySchema: GenMessage<NamedAny> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 20);

/**
 * Automatically-generated message used to represent maps of Header as ordered (name,value) pairs.
 *
 * @generated from message gnostic.openapi.v2.NamedHeader
 */
export type NamedHeader = Message<"gnostic.openapi.v2.NamedHeader"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.openapi.v2.Header value = 2;
   */
  value?: Header;
};

/**
 * Describes the message gnostic.openapi.v2.NamedHeader.
 * Use `create(NamedHeaderSchema)` to create a new message.
 */
export const NamedHeaderSchema: GenMessage<NamedHeader> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 21);

/**
 * Automatically-generated message used to represent maps of Parameter as ordered (name,value) pairs.
 *
 * @generated from message gnostic.openapi.v2.NamedParameter
 */
export type NamedParameter = Message<"gnostic.openapi.v2.NamedParameter"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.openapi.v2.Parameter value = 2;
   */
  value?: Parameter;
};

/**
 * Describes the message gnostic.openapi.v2.NamedParameter.
 * Use `create(NamedParameterSchema)` to create a new message.
 */
export const NamedParameterSchema: GenMessage<NamedParameter> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 22);

/**
 * Automatically-generated message used to represent maps of PathItem as ordered (name,value) pairs.
 *
 * @generated from message gnostic.openapi.v2.NamedPathItem
 */
export type NamedPathItem = Message<"gnostic.openapi.v2.NamedPathItem"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.openapi.v2.PathItem value = 2;
   */
  value?: PathItem;
};

/**
 * Describes the message gnostic.openapi.v2.NamedPathItem.
 * Use `create(NamedPathItemSchema)` to create a new message.
 */
export const NamedPathItemSchema: GenMessage<NamedPathItem> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 23);

/**
 * Automatically-generated message used to represent maps of Response as ordered (name,value) pairs.
 *
 * @generated from message gnostic.openapi.v2.NamedResponse
 */
export type NamedResponse = Message<"gnostic.openapi.v2.NamedResponse"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.openapi.v2.Response value = 2;
   */
  value?: Response;
};

/**
 * Describes the message gnostic.openapi.v2.NamedResponse.
 * Use `create(NamedResponseSchema)` to create a new message.
 */
export const NamedResponseSchema: GenMessage<NamedResponse> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 24);

/**
 * Automatically-generated message used to represent maps of ResponseValue as ordered (name,value) pairs.
 *
 * @generated from message gnostic.openapi.v2.NamedResponseValue
 */
export type NamedResponseValue = Message<"gnostic.openapi.v2.NamedResponseValue"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.openapi.v2.ResponseValue value = 2;
   */
  value?: ResponseValue;
};

/**
 * Describes the message gnostic.openapi.v2.NamedResponseValue.
 * Use `create(NamedResponseValueSchema)` to create a new message.
 */
export const NamedResponseValueSchema: GenMessage<NamedResponseValue> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 25);

/**
 * Automatically-generated message used to represent maps of Schema as ordered (name,value) pairs.
 *
 * @generated from message gnostic.openapi.v2.NamedSchema
 */
export type NamedSchema = Message<"gnostic.openapi.v2.NamedSchema"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.openapi.v2.Schema value = 2;
   */
  value?: Schema;
};

/**
 * Describes the message gnostic.openapi.v2.NamedSchema.
 * Use `create(NamedSchemaSchema)` to create a new message.
 */
export const NamedSchemaSchema: GenMessage<NamedSchema> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 26);

/**
 * Automatically-generated message used to represent maps of SecurityDefinitionsItem as ordered (name,value) pairs.
 *
 * @generated from message gnostic.openapi.v2.NamedSecurityDefinitionsItem
 */
export type NamedSecurityDefinitionsItem = Message<"gnostic.openapi.v2.NamedSecurityDefinitionsItem"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.openapi.v2.SecurityDefinitionsItem value = 2;
   */
  value?: SecurityDefinitionsItem;
};

/**
 * Describes the message gnostic.openapi.v2.NamedSecurityDefinitionsItem.
 * Use `create(NamedSecurityDefinitionsItemSchema)` to create a new message.
 */
export const NamedSecurityDefinitionsItemSchema: GenMessage<NamedSecurityDefinitionsItem> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 27);

/**
 * Automatically-generated message used to represent maps of string as ordered (name,value) pairs.
 *
 * @generated from message gnostic.openapi.v2.NamedString
 */
export type NamedString = Message<"gnostic.openapi.v2.NamedString"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message gnostic.openapi.v2.NamedString.
 * Use `create(NamedStringSchema)` to create a new message.
 */
export const NamedStringSchema: GenMessage<NamedString> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 28);

/**
 * Automatically-generated message used to represent maps of StringArray as ordered (name,value) pairs.
 *
 * @generated from message gnostic.openapi.v2.NamedStringArray
 */
export type NamedStringArray = Message<"gnostic.openapi.v2.NamedStringArray"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.openapi.v2.StringArray value = 2;
   */
  value?: StringArray;
};

/**
 * Describes the message gnostic.openapi.v2.NamedStringArray.
 * Use `create(NamedStringArraySchema)` to create a new message.
 */
export const NamedStringArraySchema: GenMessage<NamedStringArray> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 29);

/**
 * @generated from message gnostic.openapi.v2.NonBodyParameter
 */
export type NonBodyParameter = Message<"gnostic.openapi.v2.NonBodyParameter"> & {
  /**
   * @generated from oneof gnostic.openapi.v2.NonBodyParameter.oneof
   */
  oneof: {
    /**
     * @generated from field: gnostic.openapi.v2.HeaderParameterSubSchema header_parameter_sub_schema = 1;
     */
    value: HeaderParameterSubSchema;
    case: "headerParameterSubSchema";
  } | {
    /**
     * @generated from field: gnostic.openapi.v2.FormDataParameterSubSchema form_data_parameter_sub_schema = 2;
     */
    value: FormDataParameterSubSchema;
    case: "formDataParameterSubSchema";
  } | {
    /**
     * @generated from field: gnostic.openapi.v2.QueryParameterSubSchema query_parameter_sub_schema = 3;
     */
    value: QueryParameterSubSchema;
    case: "queryParameterSubSchema";
  } | {
    /**
     * @generated from field: gnostic.openapi.v2.PathParameterSubSchema path_parameter_sub_schema = 4;
     */
    value: PathParameterSubSchema;
    case: "pathParameterSubSchema";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message gnostic.openapi.v2.NonBodyParameter.
 * Use `create(NonBodyParameterSchema)` to create a new message.
 */
export const NonBodyParameterSchema: GenMessage<NonBodyParameter> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 30);

/**
 * @generated from message gnostic.openapi.v2.Oauth2AccessCodeSecurity
 */
export type Oauth2AccessCodeSecurity = Message<"gnostic.openapi.v2.Oauth2AccessCodeSecurity"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string flow = 2;
   */
  flow: string;

  /**
   * @generated from field: gnostic.openapi.v2.Oauth2Scopes scopes = 3;
   */
  scopes?: Oauth2Scopes;

  /**
   * @generated from field: string authorization_url = 4;
   */
  authorizationUrl: string;

  /**
   * @generated from field: string token_url = 5;
   */
  tokenUrl: string;

  /**
   * @generated from field: string description = 6;
   */
  description: string;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 7;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Oauth2AccessCodeSecurity.
 * Use `create(Oauth2AccessCodeSecuritySchema)` to create a new message.
 */
export const Oauth2AccessCodeSecuritySchema: GenMessage<Oauth2AccessCodeSecurity> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 31);

/**
 * @generated from message gnostic.openapi.v2.Oauth2ApplicationSecurity
 */
export type Oauth2ApplicationSecurity = Message<"gnostic.openapi.v2.Oauth2ApplicationSecurity"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string flow = 2;
   */
  flow: string;

  /**
   * @generated from field: gnostic.openapi.v2.Oauth2Scopes scopes = 3;
   */
  scopes?: Oauth2Scopes;

  /**
   * @generated from field: string token_url = 4;
   */
  tokenUrl: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 6;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Oauth2ApplicationSecurity.
 * Use `create(Oauth2ApplicationSecuritySchema)` to create a new message.
 */
export const Oauth2ApplicationSecuritySchema: GenMessage<Oauth2ApplicationSecurity> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 32);

/**
 * @generated from message gnostic.openapi.v2.Oauth2ImplicitSecurity
 */
export type Oauth2ImplicitSecurity = Message<"gnostic.openapi.v2.Oauth2ImplicitSecurity"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string flow = 2;
   */
  flow: string;

  /**
   * @generated from field: gnostic.openapi.v2.Oauth2Scopes scopes = 3;
   */
  scopes?: Oauth2Scopes;

  /**
   * @generated from field: string authorization_url = 4;
   */
  authorizationUrl: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 6;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Oauth2ImplicitSecurity.
 * Use `create(Oauth2ImplicitSecuritySchema)` to create a new message.
 */
export const Oauth2ImplicitSecuritySchema: GenMessage<Oauth2ImplicitSecurity> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 33);

/**
 * @generated from message gnostic.openapi.v2.Oauth2PasswordSecurity
 */
export type Oauth2PasswordSecurity = Message<"gnostic.openapi.v2.Oauth2PasswordSecurity"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string flow = 2;
   */
  flow: string;

  /**
   * @generated from field: gnostic.openapi.v2.Oauth2Scopes scopes = 3;
   */
  scopes?: Oauth2Scopes;

  /**
   * @generated from field: string token_url = 4;
   */
  tokenUrl: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 6;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Oauth2PasswordSecurity.
 * Use `create(Oauth2PasswordSecuritySchema)` to create a new message.
 */
export const Oauth2PasswordSecuritySchema: GenMessage<Oauth2PasswordSecurity> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 34);

/**
 * @generated from message gnostic.openapi.v2.Oauth2Scopes
 */
export type Oauth2Scopes = Message<"gnostic.openapi.v2.Oauth2Scopes"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedString additional_properties = 1;
   */
  additionalProperties: NamedString[];
};

/**
 * Describes the message gnostic.openapi.v2.Oauth2Scopes.
 * Use `create(Oauth2ScopesSchema)` to create a new message.
 */
export const Oauth2ScopesSchema: GenMessage<Oauth2Scopes> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 35);

/**
 * @generated from message gnostic.openapi.v2.Operation
 */
export type Operation = Message<"gnostic.openapi.v2.Operation"> & {
  /**
   * @generated from field: repeated string tags = 1;
   */
  tags: string[];

  /**
   * A brief summary of the operation.
   *
   * @generated from field: string summary = 2;
   */
  summary: string;

  /**
   * A longer description of the operation, GitHub Flavored Markdown is allowed.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: gnostic.openapi.v2.ExternalDocs external_docs = 4;
   */
  externalDocs?: ExternalDocs;

  /**
   * A unique identifier of the operation.
   *
   * @generated from field: string operation_id = 5;
   */
  operationId: string;

  /**
   * A list of MIME types the API can produce.
   *
   * @generated from field: repeated string produces = 6;
   */
  produces: string[];

  /**
   * A list of MIME types the API can consume.
   *
   * @generated from field: repeated string consumes = 7;
   */
  consumes: string[];

  /**
   * The parameters needed to send a valid API call.
   *
   * @generated from field: repeated gnostic.openapi.v2.ParametersItem parameters = 8;
   */
  parameters: ParametersItem[];

  /**
   * @generated from field: gnostic.openapi.v2.Responses responses = 9;
   */
  responses?: Responses;

  /**
   * The transfer protocol of the API.
   *
   * @generated from field: repeated string schemes = 10;
   */
  schemes: string[];

  /**
   * @generated from field: bool deprecated = 11;
   */
  deprecated: boolean;

  /**
   * @generated from field: repeated gnostic.openapi.v2.SecurityRequirement security = 12;
   */
  security: SecurityRequirement[];

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 13;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Operation.
 * Use `create(OperationSchema)` to create a new message.
 */
export const OperationSchema: GenMessage<Operation> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 36);

/**
 * @generated from message gnostic.openapi.v2.Parameter
 */
export type Parameter = Message<"gnostic.openapi.v2.Parameter"> & {
  /**
   * @generated from oneof gnostic.openapi.v2.Parameter.oneof
   */
  oneof: {
    /**
     * @generated from field: gnostic.openapi.v2.BodyParameter body_parameter = 1;
     */
    value: BodyParameter;
    case: "bodyParameter";
  } | {
    /**
     * @generated from field: gnostic.openapi.v2.NonBodyParameter non_body_parameter = 2;
     */
    value: NonBodyParameter;
    case: "nonBodyParameter";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message gnostic.openapi.v2.Parameter.
 * Use `create(ParameterSchema)` to create a new message.
 */
export const ParameterSchema: GenMessage<Parameter> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 37);

/**
 * One or more JSON representations for parameters
 *
 * @generated from message gnostic.openapi.v2.ParameterDefinitions
 */
export type ParameterDefinitions = Message<"gnostic.openapi.v2.ParameterDefinitions"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedParameter additional_properties = 1;
   */
  additionalProperties: NamedParameter[];
};

/**
 * Describes the message gnostic.openapi.v2.ParameterDefinitions.
 * Use `create(ParameterDefinitionsSchema)` to create a new message.
 */
export const ParameterDefinitionsSchema: GenMessage<ParameterDefinitions> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 38);

/**
 * @generated from message gnostic.openapi.v2.ParametersItem
 */
export type ParametersItem = Message<"gnostic.openapi.v2.ParametersItem"> & {
  /**
   * @generated from oneof gnostic.openapi.v2.ParametersItem.oneof
   */
  oneof: {
    /**
     * @generated from field: gnostic.openapi.v2.Parameter parameter = 1;
     */
    value: Parameter;
    case: "parameter";
  } | {
    /**
     * @generated from field: gnostic.openapi.v2.JsonReference json_reference = 2;
     */
    value: JsonReference;
    case: "jsonReference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message gnostic.openapi.v2.ParametersItem.
 * Use `create(ParametersItemSchema)` to create a new message.
 */
export const ParametersItemSchema: GenMessage<ParametersItem> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 39);

/**
 * @generated from message gnostic.openapi.v2.PathItem
 */
export type PathItem = Message<"gnostic.openapi.v2.PathItem"> & {
  /**
   * @generated from field: string _ref = 1;
   */
  Ref: string;

  /**
   * @generated from field: gnostic.openapi.v2.Operation get = 2;
   */
  get?: Operation;

  /**
   * @generated from field: gnostic.openapi.v2.Operation put = 3;
   */
  put?: Operation;

  /**
   * @generated from field: gnostic.openapi.v2.Operation post = 4;
   */
  post?: Operation;

  /**
   * @generated from field: gnostic.openapi.v2.Operation delete = 5;
   */
  delete?: Operation;

  /**
   * @generated from field: gnostic.openapi.v2.Operation options = 6;
   */
  options?: Operation;

  /**
   * @generated from field: gnostic.openapi.v2.Operation head = 7;
   */
  head?: Operation;

  /**
   * @generated from field: gnostic.openapi.v2.Operation patch = 8;
   */
  patch?: Operation;

  /**
   * The parameters needed to send a valid API call.
   *
   * @generated from field: repeated gnostic.openapi.v2.ParametersItem parameters = 9;
   */
  parameters: ParametersItem[];

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 10;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.PathItem.
 * Use `create(PathItemSchema)` to create a new message.
 */
export const PathItemSchema: GenMessage<PathItem> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 40);

/**
 * @generated from message gnostic.openapi.v2.PathParameterSubSchema
 */
export type PathParameterSubSchema = Message<"gnostic.openapi.v2.PathParameterSubSchema"> & {
  /**
   * Determines whether or not this parameter is required or optional.
   *
   * @generated from field: bool required = 1;
   */
  required: boolean;

  /**
   * Determines the location of the parameter.
   *
   * @generated from field: string in = 2;
   */
  in: string;

  /**
   * A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * The name of the parameter.
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string type = 5;
   */
  type: string;

  /**
   * @generated from field: string format = 6;
   */
  format: string;

  /**
   * @generated from field: gnostic.openapi.v2.PrimitivesItems items = 7;
   */
  items?: PrimitivesItems;

  /**
   * @generated from field: string collection_format = 8;
   */
  collectionFormat: string;

  /**
   * @generated from field: gnostic.openapi.v2.Any default = 9;
   */
  default?: Any;

  /**
   * @generated from field: double maximum = 10;
   */
  maximum: number;

  /**
   * @generated from field: bool exclusive_maximum = 11;
   */
  exclusiveMaximum: boolean;

  /**
   * @generated from field: double minimum = 12;
   */
  minimum: number;

  /**
   * @generated from field: bool exclusive_minimum = 13;
   */
  exclusiveMinimum: boolean;

  /**
   * @generated from field: int64 max_length = 14;
   */
  maxLength: bigint;

  /**
   * @generated from field: int64 min_length = 15;
   */
  minLength: bigint;

  /**
   * @generated from field: string pattern = 16;
   */
  pattern: string;

  /**
   * @generated from field: int64 max_items = 17;
   */
  maxItems: bigint;

  /**
   * @generated from field: int64 min_items = 18;
   */
  minItems: bigint;

  /**
   * @generated from field: bool unique_items = 19;
   */
  uniqueItems: boolean;

  /**
   * @generated from field: repeated gnostic.openapi.v2.Any enum = 20;
   */
  enum: Any[];

  /**
   * @generated from field: double multiple_of = 21;
   */
  multipleOf: number;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 22;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.PathParameterSubSchema.
 * Use `create(PathParameterSubSchemaSchema)` to create a new message.
 */
export const PathParameterSubSchemaSchema: GenMessage<PathParameterSubSchema> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 41);

/**
 * Relative paths to the individual endpoints. They must be relative to the 'basePath'.
 *
 * @generated from message gnostic.openapi.v2.Paths
 */
export type Paths = Message<"gnostic.openapi.v2.Paths"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 1;
   */
  vendorExtension: NamedAny[];

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedPathItem path = 2;
   */
  path: NamedPathItem[];
};

/**
 * Describes the message gnostic.openapi.v2.Paths.
 * Use `create(PathsSchema)` to create a new message.
 */
export const PathsSchema: GenMessage<Paths> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 42);

/**
 * @generated from message gnostic.openapi.v2.PrimitivesItems
 */
export type PrimitivesItems = Message<"gnostic.openapi.v2.PrimitivesItems"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string format = 2;
   */
  format: string;

  /**
   * @generated from field: gnostic.openapi.v2.PrimitivesItems items = 3;
   */
  items?: PrimitivesItems;

  /**
   * @generated from field: string collection_format = 4;
   */
  collectionFormat: string;

  /**
   * @generated from field: gnostic.openapi.v2.Any default = 5;
   */
  default?: Any;

  /**
   * @generated from field: double maximum = 6;
   */
  maximum: number;

  /**
   * @generated from field: bool exclusive_maximum = 7;
   */
  exclusiveMaximum: boolean;

  /**
   * @generated from field: double minimum = 8;
   */
  minimum: number;

  /**
   * @generated from field: bool exclusive_minimum = 9;
   */
  exclusiveMinimum: boolean;

  /**
   * @generated from field: int64 max_length = 10;
   */
  maxLength: bigint;

  /**
   * @generated from field: int64 min_length = 11;
   */
  minLength: bigint;

  /**
   * @generated from field: string pattern = 12;
   */
  pattern: string;

  /**
   * @generated from field: int64 max_items = 13;
   */
  maxItems: bigint;

  /**
   * @generated from field: int64 min_items = 14;
   */
  minItems: bigint;

  /**
   * @generated from field: bool unique_items = 15;
   */
  uniqueItems: boolean;

  /**
   * @generated from field: repeated gnostic.openapi.v2.Any enum = 16;
   */
  enum: Any[];

  /**
   * @generated from field: double multiple_of = 17;
   */
  multipleOf: number;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 18;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.PrimitivesItems.
 * Use `create(PrimitivesItemsSchema)` to create a new message.
 */
export const PrimitivesItemsSchema: GenMessage<PrimitivesItems> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 43);

/**
 * @generated from message gnostic.openapi.v2.Properties
 */
export type Properties = Message<"gnostic.openapi.v2.Properties"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedSchema additional_properties = 1;
   */
  additionalProperties: NamedSchema[];
};

/**
 * Describes the message gnostic.openapi.v2.Properties.
 * Use `create(PropertiesSchema)` to create a new message.
 */
export const PropertiesSchema: GenMessage<Properties> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 44);

/**
 * @generated from message gnostic.openapi.v2.QueryParameterSubSchema
 */
export type QueryParameterSubSchema = Message<"gnostic.openapi.v2.QueryParameterSubSchema"> & {
  /**
   * Determines whether or not this parameter is required or optional.
   *
   * @generated from field: bool required = 1;
   */
  required: boolean;

  /**
   * Determines the location of the parameter.
   *
   * @generated from field: string in = 2;
   */
  in: string;

  /**
   * A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * The name of the parameter.
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * allows sending a parameter by name only or with an empty value.
   *
   * @generated from field: bool allow_empty_value = 5;
   */
  allowEmptyValue: boolean;

  /**
   * @generated from field: string type = 6;
   */
  type: string;

  /**
   * @generated from field: string format = 7;
   */
  format: string;

  /**
   * @generated from field: gnostic.openapi.v2.PrimitivesItems items = 8;
   */
  items?: PrimitivesItems;

  /**
   * @generated from field: string collection_format = 9;
   */
  collectionFormat: string;

  /**
   * @generated from field: gnostic.openapi.v2.Any default = 10;
   */
  default?: Any;

  /**
   * @generated from field: double maximum = 11;
   */
  maximum: number;

  /**
   * @generated from field: bool exclusive_maximum = 12;
   */
  exclusiveMaximum: boolean;

  /**
   * @generated from field: double minimum = 13;
   */
  minimum: number;

  /**
   * @generated from field: bool exclusive_minimum = 14;
   */
  exclusiveMinimum: boolean;

  /**
   * @generated from field: int64 max_length = 15;
   */
  maxLength: bigint;

  /**
   * @generated from field: int64 min_length = 16;
   */
  minLength: bigint;

  /**
   * @generated from field: string pattern = 17;
   */
  pattern: string;

  /**
   * @generated from field: int64 max_items = 18;
   */
  maxItems: bigint;

  /**
   * @generated from field: int64 min_items = 19;
   */
  minItems: bigint;

  /**
   * @generated from field: bool unique_items = 20;
   */
  uniqueItems: boolean;

  /**
   * @generated from field: repeated gnostic.openapi.v2.Any enum = 21;
   */
  enum: Any[];

  /**
   * @generated from field: double multiple_of = 22;
   */
  multipleOf: number;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 23;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.QueryParameterSubSchema.
 * Use `create(QueryParameterSubSchemaSchema)` to create a new message.
 */
export const QueryParameterSubSchemaSchema: GenMessage<QueryParameterSubSchema> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 45);

/**
 * @generated from message gnostic.openapi.v2.Response
 */
export type Response = Message<"gnostic.openapi.v2.Response"> & {
  /**
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * @generated from field: gnostic.openapi.v2.SchemaItem schema = 2;
   */
  schema?: SchemaItem;

  /**
   * @generated from field: gnostic.openapi.v2.Headers headers = 3;
   */
  headers?: Headers;

  /**
   * @generated from field: gnostic.openapi.v2.Examples examples = 4;
   */
  examples?: Examples;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 5;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Response.
 * Use `create(ResponseSchema)` to create a new message.
 */
export const ResponseSchema: GenMessage<Response> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 46);

/**
 * One or more JSON representations for responses
 *
 * @generated from message gnostic.openapi.v2.ResponseDefinitions
 */
export type ResponseDefinitions = Message<"gnostic.openapi.v2.ResponseDefinitions"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedResponse additional_properties = 1;
   */
  additionalProperties: NamedResponse[];
};

/**
 * Describes the message gnostic.openapi.v2.ResponseDefinitions.
 * Use `create(ResponseDefinitionsSchema)` to create a new message.
 */
export const ResponseDefinitionsSchema: GenMessage<ResponseDefinitions> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 47);

/**
 * @generated from message gnostic.openapi.v2.ResponseValue
 */
export type ResponseValue = Message<"gnostic.openapi.v2.ResponseValue"> & {
  /**
   * @generated from oneof gnostic.openapi.v2.ResponseValue.oneof
   */
  oneof: {
    /**
     * @generated from field: gnostic.openapi.v2.Response response = 1;
     */
    value: Response;
    case: "response";
  } | {
    /**
     * @generated from field: gnostic.openapi.v2.JsonReference json_reference = 2;
     */
    value: JsonReference;
    case: "jsonReference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message gnostic.openapi.v2.ResponseValue.
 * Use `create(ResponseValueSchema)` to create a new message.
 */
export const ResponseValueSchema: GenMessage<ResponseValue> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 48);

/**
 * Response objects names can either be any valid HTTP status code or 'default'.
 *
 * @generated from message gnostic.openapi.v2.Responses
 */
export type Responses = Message<"gnostic.openapi.v2.Responses"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedResponseValue response_code = 1;
   */
  responseCode: NamedResponseValue[];

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 2;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Responses.
 * Use `create(ResponsesSchema)` to create a new message.
 */
export const ResponsesSchema: GenMessage<Responses> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 49);

/**
 * A deterministic version of a JSON Schema object.
 *
 * @generated from message gnostic.openapi.v2.Schema
 */
export type Schema = Message<"gnostic.openapi.v2.Schema"> & {
  /**
   * @generated from field: string _ref = 1;
   */
  Ref: string;

  /**
   * @generated from field: string format = 2;
   */
  format: string;

  /**
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: gnostic.openapi.v2.Any default = 5;
   */
  default?: Any;

  /**
   * @generated from field: double multiple_of = 6;
   */
  multipleOf: number;

  /**
   * @generated from field: double maximum = 7;
   */
  maximum: number;

  /**
   * @generated from field: bool exclusive_maximum = 8;
   */
  exclusiveMaximum: boolean;

  /**
   * @generated from field: double minimum = 9;
   */
  minimum: number;

  /**
   * @generated from field: bool exclusive_minimum = 10;
   */
  exclusiveMinimum: boolean;

  /**
   * @generated from field: int64 max_length = 11;
   */
  maxLength: bigint;

  /**
   * @generated from field: int64 min_length = 12;
   */
  minLength: bigint;

  /**
   * @generated from field: string pattern = 13;
   */
  pattern: string;

  /**
   * @generated from field: int64 max_items = 14;
   */
  maxItems: bigint;

  /**
   * @generated from field: int64 min_items = 15;
   */
  minItems: bigint;

  /**
   * @generated from field: bool unique_items = 16;
   */
  uniqueItems: boolean;

  /**
   * @generated from field: int64 max_properties = 17;
   */
  maxProperties: bigint;

  /**
   * @generated from field: int64 min_properties = 18;
   */
  minProperties: bigint;

  /**
   * @generated from field: repeated string required = 19;
   */
  required: string[];

  /**
   * @generated from field: repeated gnostic.openapi.v2.Any enum = 20;
   */
  enum: Any[];

  /**
   * @generated from field: gnostic.openapi.v2.AdditionalPropertiesItem additional_properties = 21;
   */
  additionalProperties?: AdditionalPropertiesItem;

  /**
   * @generated from field: gnostic.openapi.v2.TypeItem type = 22;
   */
  type?: TypeItem;

  /**
   * @generated from field: gnostic.openapi.v2.ItemsItem items = 23;
   */
  items?: ItemsItem;

  /**
   * @generated from field: repeated gnostic.openapi.v2.Schema all_of = 24;
   */
  allOf: Schema[];

  /**
   * @generated from field: gnostic.openapi.v2.Properties properties = 25;
   */
  properties?: Properties;

  /**
   * @generated from field: string discriminator = 26;
   */
  discriminator: string;

  /**
   * @generated from field: bool read_only = 27;
   */
  readOnly: boolean;

  /**
   * @generated from field: gnostic.openapi.v2.Xml xml = 28;
   */
  xml?: Xml;

  /**
   * @generated from field: gnostic.openapi.v2.ExternalDocs external_docs = 29;
   */
  externalDocs?: ExternalDocs;

  /**
   * @generated from field: gnostic.openapi.v2.Any example = 30;
   */
  example?: Any;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 31;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Schema.
 * Use `create(SchemaSchema)` to create a new message.
 */
export const SchemaSchema: GenMessage<Schema> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 50);

/**
 * @generated from message gnostic.openapi.v2.SchemaItem
 */
export type SchemaItem = Message<"gnostic.openapi.v2.SchemaItem"> & {
  /**
   * @generated from oneof gnostic.openapi.v2.SchemaItem.oneof
   */
  oneof: {
    /**
     * @generated from field: gnostic.openapi.v2.Schema schema = 1;
     */
    value: Schema;
    case: "schema";
  } | {
    /**
     * @generated from field: gnostic.openapi.v2.FileSchema file_schema = 2;
     */
    value: FileSchema;
    case: "fileSchema";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message gnostic.openapi.v2.SchemaItem.
 * Use `create(SchemaItemSchema)` to create a new message.
 */
export const SchemaItemSchema: GenMessage<SchemaItem> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 51);

/**
 * @generated from message gnostic.openapi.v2.SecurityDefinitions
 */
export type SecurityDefinitions = Message<"gnostic.openapi.v2.SecurityDefinitions"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedSecurityDefinitionsItem additional_properties = 1;
   */
  additionalProperties: NamedSecurityDefinitionsItem[];
};

/**
 * Describes the message gnostic.openapi.v2.SecurityDefinitions.
 * Use `create(SecurityDefinitionsSchema)` to create a new message.
 */
export const SecurityDefinitionsSchema: GenMessage<SecurityDefinitions> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 52);

/**
 * @generated from message gnostic.openapi.v2.SecurityDefinitionsItem
 */
export type SecurityDefinitionsItem = Message<"gnostic.openapi.v2.SecurityDefinitionsItem"> & {
  /**
   * @generated from oneof gnostic.openapi.v2.SecurityDefinitionsItem.oneof
   */
  oneof: {
    /**
     * @generated from field: gnostic.openapi.v2.BasicAuthenticationSecurity basic_authentication_security = 1;
     */
    value: BasicAuthenticationSecurity;
    case: "basicAuthenticationSecurity";
  } | {
    /**
     * @generated from field: gnostic.openapi.v2.ApiKeySecurity api_key_security = 2;
     */
    value: ApiKeySecurity;
    case: "apiKeySecurity";
  } | {
    /**
     * @generated from field: gnostic.openapi.v2.Oauth2ImplicitSecurity oauth2_implicit_security = 3;
     */
    value: Oauth2ImplicitSecurity;
    case: "oauth2ImplicitSecurity";
  } | {
    /**
     * @generated from field: gnostic.openapi.v2.Oauth2PasswordSecurity oauth2_password_security = 4;
     */
    value: Oauth2PasswordSecurity;
    case: "oauth2PasswordSecurity";
  } | {
    /**
     * @generated from field: gnostic.openapi.v2.Oauth2ApplicationSecurity oauth2_application_security = 5;
     */
    value: Oauth2ApplicationSecurity;
    case: "oauth2ApplicationSecurity";
  } | {
    /**
     * @generated from field: gnostic.openapi.v2.Oauth2AccessCodeSecurity oauth2_access_code_security = 6;
     */
    value: Oauth2AccessCodeSecurity;
    case: "oauth2AccessCodeSecurity";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message gnostic.openapi.v2.SecurityDefinitionsItem.
 * Use `create(SecurityDefinitionsItemSchema)` to create a new message.
 */
export const SecurityDefinitionsItemSchema: GenMessage<SecurityDefinitionsItem> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 53);

/**
 * @generated from message gnostic.openapi.v2.SecurityRequirement
 */
export type SecurityRequirement = Message<"gnostic.openapi.v2.SecurityRequirement"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedStringArray additional_properties = 1;
   */
  additionalProperties: NamedStringArray[];
};

/**
 * Describes the message gnostic.openapi.v2.SecurityRequirement.
 * Use `create(SecurityRequirementSchema)` to create a new message.
 */
export const SecurityRequirementSchema: GenMessage<SecurityRequirement> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 54);

/**
 * @generated from message gnostic.openapi.v2.StringArray
 */
export type StringArray = Message<"gnostic.openapi.v2.StringArray"> & {
  /**
   * @generated from field: repeated string value = 1;
   */
  value: string[];
};

/**
 * Describes the message gnostic.openapi.v2.StringArray.
 * Use `create(StringArraySchema)` to create a new message.
 */
export const StringArraySchema: GenMessage<StringArray> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 55);

/**
 * @generated from message gnostic.openapi.v2.Tag
 */
export type Tag = Message<"gnostic.openapi.v2.Tag"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: gnostic.openapi.v2.ExternalDocs external_docs = 3;
   */
  externalDocs?: ExternalDocs;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 4;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Tag.
 * Use `create(TagSchema)` to create a new message.
 */
export const TagSchema: GenMessage<Tag> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 56);

/**
 * @generated from message gnostic.openapi.v2.TypeItem
 */
export type TypeItem = Message<"gnostic.openapi.v2.TypeItem"> & {
  /**
   * @generated from field: repeated string value = 1;
   */
  value: string[];
};

/**
 * Describes the message gnostic.openapi.v2.TypeItem.
 * Use `create(TypeItemSchema)` to create a new message.
 */
export const TypeItemSchema: GenMessage<TypeItem> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 57);

/**
 * Any property starting with x- is valid.
 *
 * @generated from message gnostic.openapi.v2.VendorExtension
 */
export type VendorExtension = Message<"gnostic.openapi.v2.VendorExtension"> & {
  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny additional_properties = 1;
   */
  additionalProperties: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.VendorExtension.
 * Use `create(VendorExtensionSchema)` to create a new message.
 */
export const VendorExtensionSchema: GenMessage<VendorExtension> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 58);

/**
 * @generated from message gnostic.openapi.v2.Xml
 */
export type Xml = Message<"gnostic.openapi.v2.Xml"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string namespace = 2;
   */
  namespace: string;

  /**
   * @generated from field: string prefix = 3;
   */
  prefix: string;

  /**
   * @generated from field: bool attribute = 4;
   */
  attribute: boolean;

  /**
   * @generated from field: bool wrapped = 5;
   */
  wrapped: boolean;

  /**
   * @generated from field: repeated gnostic.openapi.v2.NamedAny vendor_extension = 6;
   */
  vendorExtension: NamedAny[];
};

/**
 * Describes the message gnostic.openapi.v2.Xml.
 * Use `create(XmlSchema)` to create a new message.
 */
export const XmlSchema: GenMessage<Xml> = /*@__PURE__*/
  messageDesc(file_gnostic_openapi_v2_openapiv2, 59);

