// Copyright 2020 Google LLC. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// THIS FILE IS AUTOMATICALLY GENERATED.

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file gnostic/discovery/v1/discovery.proto (package gnostic.discovery.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any as Any$1 } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file gnostic/discovery/v1/discovery.proto.
 */
export const file_gnostic_discovery_v1_discovery: GenFile = /*@__PURE__*/
  fileDesc("CiRnbm9zdGljL2Rpc2NvdmVyeS92MS9kaXNjb3ZlcnkucHJvdG8SFGdub3N0aWMuZGlzY292ZXJ5LnYxIh8KC0Fubm90YXRpb25zEhAKCHJlcXVpcmVkGAEgAygJIjgKA0FueRIjCgV2YWx1ZRgBIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSDAoEeWFtbBgCIAEoCSI0CgRBdXRoEiwKBm9hdXRoMhgBIAEoCzIcLmdub3N0aWMuZGlzY292ZXJ5LnYxLk9hdXRoMiKjBgoIRG9jdW1lbnQSDAoEa2luZBgBIAEoCRIZChFkaXNjb3ZlcnlfdmVyc2lvbhgCIAEoCRIKCgJpZBgDIAEoCRIMCgRuYW1lGAQgASgJEg8KB3ZlcnNpb24YBSABKAkSEAoIcmV2aXNpb24YBiABKAkSDQoFdGl0bGUYByABKAkSEwoLZGVzY3JpcHRpb24YCCABKAkSKgoFaWNvbnMYCSABKAsyGy5nbm9zdGljLmRpc2NvdmVyeS52MS5JY29ucxIaChJkb2N1bWVudGF0aW9uX2xpbmsYCiABKAkSDgoGbGFiZWxzGAsgAygJEhAKCHByb3RvY29sGAwgASgJEhAKCGJhc2VfdXJsGA0gASgJEhEKCWJhc2VfcGF0aBgOIAEoCRIQCghyb290X3VybBgPIAEoCRIUCgxzZXJ2aWNlX3BhdGgYECABKAkSEgoKYmF0Y2hfcGF0aBgRIAEoCRI0CgpwYXJhbWV0ZXJzGBIgASgLMiAuZ25vc3RpYy5kaXNjb3ZlcnkudjEuUGFyYW1ldGVycxIoCgRhdXRoGBMgASgLMhouZ25vc3RpYy5kaXNjb3ZlcnkudjEuQXV0aBIQCghmZWF0dXJlcxgUIAMoCRIuCgdzY2hlbWFzGBUgASgLMh0uZ25vc3RpYy5kaXNjb3ZlcnkudjEuU2NoZW1hcxIuCgdtZXRob2RzGBYgASgLMh0uZ25vc3RpYy5kaXNjb3ZlcnkudjEuTWV0aG9kcxIyCglyZXNvdXJjZXMYFyABKAsyHy5nbm9zdGljLmRpc2NvdmVyeS52MS5SZXNvdXJjZXMSDAoEZXRhZxgYIAEoCRIUCgxvd25lcl9kb21haW4YGSABKAkSEgoKb3duZXJfbmFtZRgaIAEoCRIWCg52ZXJzaW9uX21vZHVsZRgbIAEoCBIWCg5jYW5vbmljYWxfbmFtZRgcIAEoCRInCh9mdWxseV9lbmNvZGVfcmVzZXJ2ZWRfZXhwYW5zaW9uGB0gASgIEhQKDHBhY2thZ2VfcGF0aBgeIAEoCRIVCg1tdGxzX3Jvb3RfdXJsGB8gASgJIiEKBUljb25zEgsKA3gxNhgBIAEoCRILCgN4MzIYAiABKAkiggEKC01lZGlhVXBsb2FkEg4KBmFjY2VwdBgBIAMoCRIQCghtYXhfc2l6ZRgCIAEoCRIyCglwcm90b2NvbHMYAyABKAsyHy5nbm9zdGljLmRpc2NvdmVyeS52MS5Qcm90b2NvbHMSHQoVc3VwcG9ydHNfc3Vic2NyaXB0aW9uGAQgASgIIosECgZNZXRob2QSCgoCaWQYASABKAkSDAoEcGF0aBgCIAEoCRITCgtodHRwX21ldGhvZBgDIAEoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRI0CgpwYXJhbWV0ZXJzGAUgASgLMiAuZ25vc3RpYy5kaXNjb3ZlcnkudjEuUGFyYW1ldGVycxIXCg9wYXJhbWV0ZXJfb3JkZXIYBiADKAkSLgoHcmVxdWVzdBgHIAEoCzIdLmdub3N0aWMuZGlzY292ZXJ5LnYxLlJlcXVlc3QSMAoIcmVzcG9uc2UYCCABKAsyHi5nbm9zdGljLmRpc2NvdmVyeS52MS5SZXNwb25zZRIOCgZzY29wZXMYCSADKAkSHwoXc3VwcG9ydHNfbWVkaWFfZG93bmxvYWQYCiABKAgSHQoVc3VwcG9ydHNfbWVkaWFfdXBsb2FkGAsgASgIEiIKGnVzZV9tZWRpYV9kb3dubG9hZF9zZXJ2aWNlGAwgASgIEjcKDG1lZGlhX3VwbG9hZBgNIAEoCzIhLmdub3N0aWMuZGlzY292ZXJ5LnYxLk1lZGlhVXBsb2FkEh0KFXN1cHBvcnRzX3N1YnNjcmlwdGlvbhgOIAEoCBIRCglmbGF0X3BhdGgYDyABKAkSFQoNZXRhZ19yZXF1aXJlZBgQIAEoCBIWCg5zdHJlYW1pbmdfdHlwZRgRIAEoCSJLCgdNZXRob2RzEkAKFWFkZGl0aW9uYWxfcHJvcGVydGllcxgBIAMoCzIhLmdub3N0aWMuZGlzY292ZXJ5LnYxLk5hbWVkTWV0aG9kIkgKC05hbWVkTWV0aG9kEgwKBG5hbWUYASABKAkSKwoFdmFsdWUYAiABKAsyHC5nbm9zdGljLmRpc2NvdmVyeS52MS5NZXRob2QiTgoOTmFtZWRQYXJhbWV0ZXISDAoEbmFtZRgBIAEoCRIuCgV2YWx1ZRgCIAEoCzIfLmdub3N0aWMuZGlzY292ZXJ5LnYxLlBhcmFtZXRlciJMCg1OYW1lZFJlc291cmNlEgwKBG5hbWUYASABKAkSLQoFdmFsdWUYAiABKAsyHi5nbm9zdGljLmRpc2NvdmVyeS52MS5SZXNvdXJjZSJICgtOYW1lZFNjaGVtYRIMCgRuYW1lGAEgASgJEisKBXZhbHVlGAIgASgLMhwuZ25vc3RpYy5kaXNjb3ZlcnkudjEuU2NoZW1hIkYKCk5hbWVkU2NvcGUSDAoEbmFtZRgBIAEoCRIqCgV2YWx1ZRgCIAEoCzIbLmdub3N0aWMuZGlzY292ZXJ5LnYxLlNjb3BlIjYKBk9hdXRoMhIsCgZzY29wZXMYASABKAsyHC5nbm9zdGljLmRpc2NvdmVyeS52MS5TY29wZXMi0AMKCVBhcmFtZXRlchIKCgJpZBgBIAEoCRIMCgR0eXBlGAIgASgJEgwKBF9yZWYYAyABKAkSEwoLZGVzY3JpcHRpb24YBCABKAkSDwoHZGVmYXVsdBgFIAEoCRIQCghyZXF1aXJlZBgGIAEoCBIOCgZmb3JtYXQYByABKAkSDwoHcGF0dGVybhgIIAEoCRIPCgdtaW5pbXVtGAkgASgJEg8KB21heGltdW0YCiABKAkSDAoEZW51bRgLIAMoCRIZChFlbnVtX2Rlc2NyaXB0aW9ucxgMIAMoCRIQCghyZXBlYXRlZBgNIAEoCBIQCghsb2NhdGlvbhgOIAEoCRIxCgpwcm9wZXJ0aWVzGA8gASgLMh0uZ25vc3RpYy5kaXNjb3ZlcnkudjEuU2NoZW1hcxI7ChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMYECABKAsyHC5nbm9zdGljLmRpc2NvdmVyeS52MS5TY2hlbWESKwoFaXRlbXMYESABKAsyHC5nbm9zdGljLmRpc2NvdmVyeS52MS5TY2hlbWESNgoLYW5ub3RhdGlvbnMYEiABKAsyIS5nbm9zdGljLmRpc2NvdmVyeS52MS5Bbm5vdGF0aW9ucyJRCgpQYXJhbWV0ZXJzEkMKFWFkZGl0aW9uYWxfcHJvcGVydGllcxgBIAMoCzIkLmdub3N0aWMuZGlzY292ZXJ5LnYxLk5hbWVkUGFyYW1ldGVyIm0KCVByb3RvY29scxIsCgZzaW1wbGUYASABKAsyHC5nbm9zdGljLmRpc2NvdmVyeS52MS5TaW1wbGUSMgoJcmVzdW1hYmxlGAIgASgLMh8uZ25vc3RpYy5kaXNjb3ZlcnkudjEuUmVzdW1hYmxlIi8KB1JlcXVlc3QSDAoEX3JlZhgBIAEoCRIWCg5wYXJhbWV0ZXJfbmFtZRgCIAEoCSJuCghSZXNvdXJjZRIuCgdtZXRob2RzGAEgASgLMh0uZ25vc3RpYy5kaXNjb3ZlcnkudjEuTWV0aG9kcxIyCglyZXNvdXJjZXMYAiABKAsyHy5nbm9zdGljLmRpc2NvdmVyeS52MS5SZXNvdXJjZXMiTwoJUmVzb3VyY2VzEkIKFWFkZGl0aW9uYWxfcHJvcGVydGllcxgBIAMoCzIjLmdub3N0aWMuZGlzY292ZXJ5LnYxLk5hbWVkUmVzb3VyY2UiGAoIUmVzcG9uc2USDAoEX3JlZhgBIAEoCSIsCglSZXN1bWFibGUSEQoJbXVsdGlwYXJ0GAEgASgIEgwKBHBhdGgYAiABKAki4AMKBlNjaGVtYRIKCgJpZBgBIAEoCRIMCgR0eXBlGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEg8KB2RlZmF1bHQYBCABKAkSEAoIcmVxdWlyZWQYBSABKAgSDgoGZm9ybWF0GAYgASgJEg8KB3BhdHRlcm4YByABKAkSDwoHbWluaW11bRgIIAEoCRIPCgdtYXhpbXVtGAkgASgJEgwKBGVudW0YCiADKAkSGQoRZW51bV9kZXNjcmlwdGlvbnMYCyADKAkSEAoIcmVwZWF0ZWQYDCABKAgSEAoIbG9jYXRpb24YDSABKAkSMQoKcHJvcGVydGllcxgOIAEoCzIdLmdub3N0aWMuZGlzY292ZXJ5LnYxLlNjaGVtYXMSOwoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzGA8gASgLMhwuZ25vc3RpYy5kaXNjb3ZlcnkudjEuU2NoZW1hEisKBWl0ZW1zGBAgASgLMhwuZ25vc3RpYy5kaXNjb3ZlcnkudjEuU2NoZW1hEgwKBF9yZWYYESABKAkSNgoLYW5ub3RhdGlvbnMYEiABKAsyIS5nbm9zdGljLmRpc2NvdmVyeS52MS5Bbm5vdGF0aW9ucxIRCglyZWFkX29ubHkYEyABKAgiSwoHU2NoZW1hcxJAChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMYASADKAsyIS5nbm9zdGljLmRpc2NvdmVyeS52MS5OYW1lZFNjaGVtYSIcCgVTY29wZRITCgtkZXNjcmlwdGlvbhgBIAEoCSJJCgZTY29wZXMSPwoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzGAEgAygLMiAuZ25vc3RpYy5kaXNjb3ZlcnkudjEuTmFtZWRTY29wZSIpCgZTaW1wbGUSEQoJbXVsdGlwYXJ0GAEgASgIEgwKBHBhdGgYAiABKAkiHAoLU3RyaW5nQXJyYXkSDQoFdmFsdWUYASADKAlCzgEKGGNvbS5nbm9zdGljLmRpc2NvdmVyeS52MUIORGlzY292ZXJ5UHJvdG9QAVowZ2l0aHViLmNvbS9nb29nbGUvZ25vc3RpYy9kaXNjb3Zlcnk7ZGlzY292ZXJ5X3YxogIDR0RYqgIUR25vc3RpYy5EaXNjb3ZlcnkuVjHKAhRHbm9zdGljXERpc2NvdmVyeVxWMeICIEdub3N0aWNcRGlzY292ZXJ5XFYxXEdQQk1ldGFkYXRh6gIWR25vc3RpYzo6RGlzY292ZXJ5OjpWMWIGcHJvdG8z", [file_google_protobuf_any]);

/**
 * @generated from message gnostic.discovery.v1.Annotations
 */
export type Annotations = Message<"gnostic.discovery.v1.Annotations"> & {
  /**
   * @generated from field: repeated string required = 1;
   */
  required: string[];
};

/**
 * Describes the message gnostic.discovery.v1.Annotations.
 * Use `create(AnnotationsSchema)` to create a new message.
 */
export const AnnotationsSchema: GenMessage<Annotations> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 0);

/**
 * @generated from message gnostic.discovery.v1.Any
 */
export type Any = Message<"gnostic.discovery.v1.Any"> & {
  /**
   * @generated from field: google.protobuf.Any value = 1;
   */
  value?: Any$1;

  /**
   * @generated from field: string yaml = 2;
   */
  yaml: string;
};

/**
 * Describes the message gnostic.discovery.v1.Any.
 * Use `create(AnySchema)` to create a new message.
 */
export const AnySchema: GenMessage<Any> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 1);

/**
 * @generated from message gnostic.discovery.v1.Auth
 */
export type Auth = Message<"gnostic.discovery.v1.Auth"> & {
  /**
   * @generated from field: gnostic.discovery.v1.Oauth2 oauth2 = 1;
   */
  oauth2?: Oauth2;
};

/**
 * Describes the message gnostic.discovery.v1.Auth.
 * Use `create(AuthSchema)` to create a new message.
 */
export const AuthSchema: GenMessage<Auth> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 2);

/**
 * @generated from message gnostic.discovery.v1.Document
 */
export type Document = Message<"gnostic.discovery.v1.Document"> & {
  /**
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * @generated from field: string discovery_version = 2;
   */
  discoveryVersion: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string version = 5;
   */
  version: string;

  /**
   * @generated from field: string revision = 6;
   */
  revision: string;

  /**
   * @generated from field: string title = 7;
   */
  title: string;

  /**
   * @generated from field: string description = 8;
   */
  description: string;

  /**
   * @generated from field: gnostic.discovery.v1.Icons icons = 9;
   */
  icons?: Icons;

  /**
   * @generated from field: string documentation_link = 10;
   */
  documentationLink: string;

  /**
   * @generated from field: repeated string labels = 11;
   */
  labels: string[];

  /**
   * @generated from field: string protocol = 12;
   */
  protocol: string;

  /**
   * @generated from field: string base_url = 13;
   */
  baseUrl: string;

  /**
   * @generated from field: string base_path = 14;
   */
  basePath: string;

  /**
   * @generated from field: string root_url = 15;
   */
  rootUrl: string;

  /**
   * @generated from field: string service_path = 16;
   */
  servicePath: string;

  /**
   * @generated from field: string batch_path = 17;
   */
  batchPath: string;

  /**
   * @generated from field: gnostic.discovery.v1.Parameters parameters = 18;
   */
  parameters?: Parameters;

  /**
   * @generated from field: gnostic.discovery.v1.Auth auth = 19;
   */
  auth?: Auth;

  /**
   * @generated from field: repeated string features = 20;
   */
  features: string[];

  /**
   * @generated from field: gnostic.discovery.v1.Schemas schemas = 21;
   */
  schemas?: Schemas;

  /**
   * @generated from field: gnostic.discovery.v1.Methods methods = 22;
   */
  methods?: Methods;

  /**
   * @generated from field: gnostic.discovery.v1.Resources resources = 23;
   */
  resources?: Resources;

  /**
   * @generated from field: string etag = 24;
   */
  etag: string;

  /**
   * @generated from field: string owner_domain = 25;
   */
  ownerDomain: string;

  /**
   * @generated from field: string owner_name = 26;
   */
  ownerName: string;

  /**
   * @generated from field: bool version_module = 27;
   */
  versionModule: boolean;

  /**
   * @generated from field: string canonical_name = 28;
   */
  canonicalName: string;

  /**
   * @generated from field: bool fully_encode_reserved_expansion = 29;
   */
  fullyEncodeReservedExpansion: boolean;

  /**
   * @generated from field: string package_path = 30;
   */
  packagePath: string;

  /**
   * @generated from field: string mtls_root_url = 31;
   */
  mtlsRootUrl: string;
};

/**
 * Describes the message gnostic.discovery.v1.Document.
 * Use `create(DocumentSchema)` to create a new message.
 */
export const DocumentSchema: GenMessage<Document> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 3);

/**
 * Icons that represent the API.
 *
 * @generated from message gnostic.discovery.v1.Icons
 */
export type Icons = Message<"gnostic.discovery.v1.Icons"> & {
  /**
   * @generated from field: string x16 = 1;
   */
  x16: string;

  /**
   * @generated from field: string x32 = 2;
   */
  x32: string;
};

/**
 * Describes the message gnostic.discovery.v1.Icons.
 * Use `create(IconsSchema)` to create a new message.
 */
export const IconsSchema: GenMessage<Icons> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 4);

/**
 * @generated from message gnostic.discovery.v1.MediaUpload
 */
export type MediaUpload = Message<"gnostic.discovery.v1.MediaUpload"> & {
  /**
   * @generated from field: repeated string accept = 1;
   */
  accept: string[];

  /**
   * @generated from field: string max_size = 2;
   */
  maxSize: string;

  /**
   * @generated from field: gnostic.discovery.v1.Protocols protocols = 3;
   */
  protocols?: Protocols;

  /**
   * @generated from field: bool supports_subscription = 4;
   */
  supportsSubscription: boolean;
};

/**
 * Describes the message gnostic.discovery.v1.MediaUpload.
 * Use `create(MediaUploadSchema)` to create a new message.
 */
export const MediaUploadSchema: GenMessage<MediaUpload> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 5);

/**
 * @generated from message gnostic.discovery.v1.Method
 */
export type Method = Message<"gnostic.discovery.v1.Method"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string path = 2;
   */
  path: string;

  /**
   * @generated from field: string http_method = 3;
   */
  httpMethod: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: gnostic.discovery.v1.Parameters parameters = 5;
   */
  parameters?: Parameters;

  /**
   * @generated from field: repeated string parameter_order = 6;
   */
  parameterOrder: string[];

  /**
   * @generated from field: gnostic.discovery.v1.Request request = 7;
   */
  request?: Request;

  /**
   * @generated from field: gnostic.discovery.v1.Response response = 8;
   */
  response?: Response;

  /**
   * @generated from field: repeated string scopes = 9;
   */
  scopes: string[];

  /**
   * @generated from field: bool supports_media_download = 10;
   */
  supportsMediaDownload: boolean;

  /**
   * @generated from field: bool supports_media_upload = 11;
   */
  supportsMediaUpload: boolean;

  /**
   * @generated from field: bool use_media_download_service = 12;
   */
  useMediaDownloadService: boolean;

  /**
   * @generated from field: gnostic.discovery.v1.MediaUpload media_upload = 13;
   */
  mediaUpload?: MediaUpload;

  /**
   * @generated from field: bool supports_subscription = 14;
   */
  supportsSubscription: boolean;

  /**
   * @generated from field: string flat_path = 15;
   */
  flatPath: string;

  /**
   * @generated from field: bool etag_required = 16;
   */
  etagRequired: boolean;

  /**
   * @generated from field: string streaming_type = 17;
   */
  streamingType: string;
};

/**
 * Describes the message gnostic.discovery.v1.Method.
 * Use `create(MethodSchema)` to create a new message.
 */
export const MethodSchema: GenMessage<Method> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 6);

/**
 * @generated from message gnostic.discovery.v1.Methods
 */
export type Methods = Message<"gnostic.discovery.v1.Methods"> & {
  /**
   * @generated from field: repeated gnostic.discovery.v1.NamedMethod additional_properties = 1;
   */
  additionalProperties: NamedMethod[];
};

/**
 * Describes the message gnostic.discovery.v1.Methods.
 * Use `create(MethodsSchema)` to create a new message.
 */
export const MethodsSchema: GenMessage<Methods> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 7);

/**
 * Automatically-generated message used to represent maps of Method as ordered (name,value) pairs.
 *
 * @generated from message gnostic.discovery.v1.NamedMethod
 */
export type NamedMethod = Message<"gnostic.discovery.v1.NamedMethod"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.discovery.v1.Method value = 2;
   */
  value?: Method;
};

/**
 * Describes the message gnostic.discovery.v1.NamedMethod.
 * Use `create(NamedMethodSchema)` to create a new message.
 */
export const NamedMethodSchema: GenMessage<NamedMethod> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 8);

/**
 * Automatically-generated message used to represent maps of Parameter as ordered (name,value) pairs.
 *
 * @generated from message gnostic.discovery.v1.NamedParameter
 */
export type NamedParameter = Message<"gnostic.discovery.v1.NamedParameter"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.discovery.v1.Parameter value = 2;
   */
  value?: Parameter;
};

/**
 * Describes the message gnostic.discovery.v1.NamedParameter.
 * Use `create(NamedParameterSchema)` to create a new message.
 */
export const NamedParameterSchema: GenMessage<NamedParameter> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 9);

/**
 * Automatically-generated message used to represent maps of Resource as ordered (name,value) pairs.
 *
 * @generated from message gnostic.discovery.v1.NamedResource
 */
export type NamedResource = Message<"gnostic.discovery.v1.NamedResource"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.discovery.v1.Resource value = 2;
   */
  value?: Resource;
};

/**
 * Describes the message gnostic.discovery.v1.NamedResource.
 * Use `create(NamedResourceSchema)` to create a new message.
 */
export const NamedResourceSchema: GenMessage<NamedResource> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 10);

/**
 * Automatically-generated message used to represent maps of Schema as ordered (name,value) pairs.
 *
 * @generated from message gnostic.discovery.v1.NamedSchema
 */
export type NamedSchema = Message<"gnostic.discovery.v1.NamedSchema"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.discovery.v1.Schema value = 2;
   */
  value?: Schema;
};

/**
 * Describes the message gnostic.discovery.v1.NamedSchema.
 * Use `create(NamedSchemaSchema)` to create a new message.
 */
export const NamedSchemaSchema: GenMessage<NamedSchema> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 11);

/**
 * Automatically-generated message used to represent maps of Scope as ordered (name,value) pairs.
 *
 * @generated from message gnostic.discovery.v1.NamedScope
 */
export type NamedScope = Message<"gnostic.discovery.v1.NamedScope"> & {
  /**
   * Map key
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Mapped value
   *
   * @generated from field: gnostic.discovery.v1.Scope value = 2;
   */
  value?: Scope;
};

/**
 * Describes the message gnostic.discovery.v1.NamedScope.
 * Use `create(NamedScopeSchema)` to create a new message.
 */
export const NamedScopeSchema: GenMessage<NamedScope> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 12);

/**
 * @generated from message gnostic.discovery.v1.Oauth2
 */
export type Oauth2 = Message<"gnostic.discovery.v1.Oauth2"> & {
  /**
   * @generated from field: gnostic.discovery.v1.Scopes scopes = 1;
   */
  scopes?: Scopes;
};

/**
 * Describes the message gnostic.discovery.v1.Oauth2.
 * Use `create(Oauth2Schema)` to create a new message.
 */
export const Oauth2Schema: GenMessage<Oauth2> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 13);

/**
 * @generated from message gnostic.discovery.v1.Parameter
 */
export type Parameter = Message<"gnostic.discovery.v1.Parameter"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: string _ref = 3;
   */
  Ref: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: string default = 5;
   */
  default: string;

  /**
   * @generated from field: bool required = 6;
   */
  required: boolean;

  /**
   * @generated from field: string format = 7;
   */
  format: string;

  /**
   * @generated from field: string pattern = 8;
   */
  pattern: string;

  /**
   * @generated from field: string minimum = 9;
   */
  minimum: string;

  /**
   * @generated from field: string maximum = 10;
   */
  maximum: string;

  /**
   * @generated from field: repeated string enum = 11;
   */
  enum: string[];

  /**
   * @generated from field: repeated string enum_descriptions = 12;
   */
  enumDescriptions: string[];

  /**
   * @generated from field: bool repeated = 13;
   */
  repeated: boolean;

  /**
   * @generated from field: string location = 14;
   */
  location: string;

  /**
   * @generated from field: gnostic.discovery.v1.Schemas properties = 15;
   */
  properties?: Schemas;

  /**
   * @generated from field: gnostic.discovery.v1.Schema additional_properties = 16;
   */
  additionalProperties?: Schema;

  /**
   * @generated from field: gnostic.discovery.v1.Schema items = 17;
   */
  items?: Schema;

  /**
   * @generated from field: gnostic.discovery.v1.Annotations annotations = 18;
   */
  annotations?: Annotations;
};

/**
 * Describes the message gnostic.discovery.v1.Parameter.
 * Use `create(ParameterSchema)` to create a new message.
 */
export const ParameterSchema: GenMessage<Parameter> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 14);

/**
 * @generated from message gnostic.discovery.v1.Parameters
 */
export type Parameters = Message<"gnostic.discovery.v1.Parameters"> & {
  /**
   * @generated from field: repeated gnostic.discovery.v1.NamedParameter additional_properties = 1;
   */
  additionalProperties: NamedParameter[];
};

/**
 * Describes the message gnostic.discovery.v1.Parameters.
 * Use `create(ParametersSchema)` to create a new message.
 */
export const ParametersSchema: GenMessage<Parameters> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 15);

/**
 * @generated from message gnostic.discovery.v1.Protocols
 */
export type Protocols = Message<"gnostic.discovery.v1.Protocols"> & {
  /**
   * @generated from field: gnostic.discovery.v1.Simple simple = 1;
   */
  simple?: Simple;

  /**
   * @generated from field: gnostic.discovery.v1.Resumable resumable = 2;
   */
  resumable?: Resumable;
};

/**
 * Describes the message gnostic.discovery.v1.Protocols.
 * Use `create(ProtocolsSchema)` to create a new message.
 */
export const ProtocolsSchema: GenMessage<Protocols> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 16);

/**
 * @generated from message gnostic.discovery.v1.Request
 */
export type Request = Message<"gnostic.discovery.v1.Request"> & {
  /**
   * @generated from field: string _ref = 1;
   */
  Ref: string;

  /**
   * @generated from field: string parameter_name = 2;
   */
  parameterName: string;
};

/**
 * Describes the message gnostic.discovery.v1.Request.
 * Use `create(RequestSchema)` to create a new message.
 */
export const RequestSchema: GenMessage<Request> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 17);

/**
 * @generated from message gnostic.discovery.v1.Resource
 */
export type Resource = Message<"gnostic.discovery.v1.Resource"> & {
  /**
   * @generated from field: gnostic.discovery.v1.Methods methods = 1;
   */
  methods?: Methods;

  /**
   * @generated from field: gnostic.discovery.v1.Resources resources = 2;
   */
  resources?: Resources;
};

/**
 * Describes the message gnostic.discovery.v1.Resource.
 * Use `create(ResourceSchema)` to create a new message.
 */
export const ResourceSchema: GenMessage<Resource> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 18);

/**
 * @generated from message gnostic.discovery.v1.Resources
 */
export type Resources = Message<"gnostic.discovery.v1.Resources"> & {
  /**
   * @generated from field: repeated gnostic.discovery.v1.NamedResource additional_properties = 1;
   */
  additionalProperties: NamedResource[];
};

/**
 * Describes the message gnostic.discovery.v1.Resources.
 * Use `create(ResourcesSchema)` to create a new message.
 */
export const ResourcesSchema: GenMessage<Resources> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 19);

/**
 * @generated from message gnostic.discovery.v1.Response
 */
export type Response = Message<"gnostic.discovery.v1.Response"> & {
  /**
   * @generated from field: string _ref = 1;
   */
  Ref: string;
};

/**
 * Describes the message gnostic.discovery.v1.Response.
 * Use `create(ResponseSchema)` to create a new message.
 */
export const ResponseSchema: GenMessage<Response> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 20);

/**
 * @generated from message gnostic.discovery.v1.Resumable
 */
export type Resumable = Message<"gnostic.discovery.v1.Resumable"> & {
  /**
   * @generated from field: bool multipart = 1;
   */
  multipart: boolean;

  /**
   * @generated from field: string path = 2;
   */
  path: string;
};

/**
 * Describes the message gnostic.discovery.v1.Resumable.
 * Use `create(ResumableSchema)` to create a new message.
 */
export const ResumableSchema: GenMessage<Resumable> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 21);

/**
 * @generated from message gnostic.discovery.v1.Schema
 */
export type Schema = Message<"gnostic.discovery.v1.Schema"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: string default = 4;
   */
  default: string;

  /**
   * @generated from field: bool required = 5;
   */
  required: boolean;

  /**
   * @generated from field: string format = 6;
   */
  format: string;

  /**
   * @generated from field: string pattern = 7;
   */
  pattern: string;

  /**
   * @generated from field: string minimum = 8;
   */
  minimum: string;

  /**
   * @generated from field: string maximum = 9;
   */
  maximum: string;

  /**
   * @generated from field: repeated string enum = 10;
   */
  enum: string[];

  /**
   * @generated from field: repeated string enum_descriptions = 11;
   */
  enumDescriptions: string[];

  /**
   * @generated from field: bool repeated = 12;
   */
  repeated: boolean;

  /**
   * @generated from field: string location = 13;
   */
  location: string;

  /**
   * @generated from field: gnostic.discovery.v1.Schemas properties = 14;
   */
  properties?: Schemas;

  /**
   * @generated from field: gnostic.discovery.v1.Schema additional_properties = 15;
   */
  additionalProperties?: Schema;

  /**
   * @generated from field: gnostic.discovery.v1.Schema items = 16;
   */
  items?: Schema;

  /**
   * @generated from field: string _ref = 17;
   */
  Ref: string;

  /**
   * @generated from field: gnostic.discovery.v1.Annotations annotations = 18;
   */
  annotations?: Annotations;

  /**
   * @generated from field: bool read_only = 19;
   */
  readOnly: boolean;
};

/**
 * Describes the message gnostic.discovery.v1.Schema.
 * Use `create(SchemaSchema)` to create a new message.
 */
export const SchemaSchema: GenMessage<Schema> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 22);

/**
 * @generated from message gnostic.discovery.v1.Schemas
 */
export type Schemas = Message<"gnostic.discovery.v1.Schemas"> & {
  /**
   * @generated from field: repeated gnostic.discovery.v1.NamedSchema additional_properties = 1;
   */
  additionalProperties: NamedSchema[];
};

/**
 * Describes the message gnostic.discovery.v1.Schemas.
 * Use `create(SchemasSchema)` to create a new message.
 */
export const SchemasSchema: GenMessage<Schemas> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 23);

/**
 * @generated from message gnostic.discovery.v1.Scope
 */
export type Scope = Message<"gnostic.discovery.v1.Scope"> & {
  /**
   * @generated from field: string description = 1;
   */
  description: string;
};

/**
 * Describes the message gnostic.discovery.v1.Scope.
 * Use `create(ScopeSchema)` to create a new message.
 */
export const ScopeSchema: GenMessage<Scope> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 24);

/**
 * @generated from message gnostic.discovery.v1.Scopes
 */
export type Scopes = Message<"gnostic.discovery.v1.Scopes"> & {
  /**
   * @generated from field: repeated gnostic.discovery.v1.NamedScope additional_properties = 1;
   */
  additionalProperties: NamedScope[];
};

/**
 * Describes the message gnostic.discovery.v1.Scopes.
 * Use `create(ScopesSchema)` to create a new message.
 */
export const ScopesSchema: GenMessage<Scopes> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 25);

/**
 * @generated from message gnostic.discovery.v1.Simple
 */
export type Simple = Message<"gnostic.discovery.v1.Simple"> & {
  /**
   * @generated from field: bool multipart = 1;
   */
  multipart: boolean;

  /**
   * @generated from field: string path = 2;
   */
  path: string;
};

/**
 * Describes the message gnostic.discovery.v1.Simple.
 * Use `create(SimpleSchema)` to create a new message.
 */
export const SimpleSchema: GenMessage<Simple> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 26);

/**
 * @generated from message gnostic.discovery.v1.StringArray
 */
export type StringArray = Message<"gnostic.discovery.v1.StringArray"> & {
  /**
   * @generated from field: repeated string value = 1;
   */
  value: string[];
};

/**
 * Describes the message gnostic.discovery.v1.StringArray.
 * Use `create(StringArraySchema)` to create a new message.
 */
export const StringArraySchema: GenMessage<StringArray> = /*@__PURE__*/
  messageDesc(file_gnostic_discovery_v1_discovery, 27);

