// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file delta_sharing/credentials/v1/models.proto (package delta_sharing.credentials.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_google_api_client } from "../../../google/api/client_pb";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb";
import { file_google_api_resource } from "../../../google/api/resource_pb";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file delta_sharing/credentials/v1/models.proto.
 */
export const file_delta_sharing_credentials_v1_models: GenFile = /*@__PURE__*/
  fileDesc("CilkZWx0YV9zaGFyaW5nL2NyZWRlbnRpYWxzL3YxL21vZGVscy5wcm90bxIcZGVsdGFfc2hhcmluZy5jcmVkZW50aWFscy52MSKdAQoVQXp1cmVTZXJ2aWNlUHJpbmNpcGFsEhkKDGRpcmVjdG9yeV9pZBgBIAEoCUID4EECEhsKDmFwcGxpY2F0aW9uX2lkGAIgASgJQgPgQQISFwoNY2xpZW50X3NlY3JldBgDIAEoCUgAEh4KFGZlZGVyYXRlZF90b2tlbl9maWxlGAUgASgJSABCEwoKY3JlZGVudGlhbBIFukgCCAEifQoUQXp1cmVNYW5hZ2VkSWRlbnRpdHkSGAoJb2JqZWN0X2lkGAEgASgJQgPgQQFIABIdCg5hcHBsaWNhdGlvbl9pZBgCIAEoCUID4EEBSAASHgoPbXNpX3Jlc291cmNlX2lkGAMgASgJQgPgQQFIAEIMCgppZGVudGlmaWVyItkECg5DcmVkZW50aWFsSW5mbxIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEjYKB3B1cnBvc2UYAyABKA4yJS5kZWx0YV9zaGFyaW5nLmNyZWRlbnRpYWxzLnYxLlB1cnBvc2USEQoJcmVhZF9vbmx5GAQgASgIEhQKB2NvbW1lbnQYBSABKAlIAYgBARISCgVvd25lchgGIAEoCUgCiAEBEhcKCmNyZWF0ZWRfYXQYByABKANIA4gBARIXCgpjcmVhdGVkX2J5GAggASgJSASIAQESFwoKdXBkYXRlZF9hdBgJIAEoA0gFiAEBEhcKCnVwZGF0ZWRfYnkYCiABKAlIBogBARIgChh1c2VkX2Zvcl9tYW5hZ2VkX3N0b3JhZ2UYCyABKAgSFgoJZnVsbF9uYW1lGAwgASgJSAeIAQESVgoXYXp1cmVfc2VydmljZV9wcmluY2lwYWwYZCABKAsyMy5kZWx0YV9zaGFyaW5nLmNyZWRlbnRpYWxzLnYxLkF6dXJlU2VydmljZVByaW5jaXBhbEgAElQKFmF6dXJlX21hbmFnZWRfaWRlbnRpdHkYZSABKAsyMi5kZWx0YV9zaGFyaW5nLmNyZWRlbnRpYWxzLnYxLkF6dXJlTWFuYWdlZElkZW50aXR5SABCDAoKY3JlZGVudGlhbEIKCghfY29tbWVudEIICgZfb3duZXJCDQoLX2NyZWF0ZWRfYXRCDQoLX2NyZWF0ZWRfYnlCDQoLX3VwZGF0ZWRfYXRCDQoLX3VwZGF0ZWRfYnlCDAoKX2Z1bGxfbmFtZSo8CgdQdXJwb3NlEhcKE1BVUlBPU0VfVU5TUEVDSUZJRUQQABILCgdTVE9SQUdFEAESCwoHU0VSVklDRRACQpgCCiBjb20uZGVsdGFfc2hhcmluZy5jcmVkZW50aWFscy52MUILTW9kZWxzUHJvdG9QAVpZZ2l0aHViLmNvbS9kZWx0YS1pbmN1YmF0b3IvZGVsdGEtc2hhcmluZy1ycy9nby9kZWx0YV9zaGFyaW5nL2NyZWRlbnRpYWxzL3YxO2NyZWRlbnRpYWxzdjGiAgNEQ1iqAhtEZWx0YVNoYXJpbmcuQ3JlZGVudGlhbHMuVjHKAhtEZWx0YVNoYXJpbmdcQ3JlZGVudGlhbHNcVjHiAidEZWx0YVNoYXJpbmdcQ3JlZGVudGlhbHNcVjFcR1BCTWV0YWRhdGHqAh1EZWx0YVNoYXJpbmc6OkNyZWRlbnRpYWxzOjpWMWIGcHJvdG8z", [file_buf_validate_validate, file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_struct]);

/**
 * @generated from message delta_sharing.credentials.v1.AzureServicePrincipal
 */
export type AzureServicePrincipal = Message<"delta_sharing.credentials.v1.AzureServicePrincipal"> & {
  /**
   * The directory ID corresponding to the Azure Active Directory (AAD) tenant of the application.
   *
   * @generated from field: string directory_id = 1;
   */
  directoryId: string;

  /**
   * The application ID of the application registration within the referenced AAD tenant.
   *
   * @generated from field: string application_id = 2;
   */
  applicationId: string;

  /**
   * @generated from oneof delta_sharing.credentials.v1.AzureServicePrincipal.credential
   */
  credential: {
    /**
     * The client secret generated for the above app ID in AAD.
     *
     * @generated from field: string client_secret = 3;
     */
    value: string;
    case: "clientSecret";
  } | {
    /**
     * Location of the file containing a federated token.
     *
     * Specifically useful for workload identity federation.
     *
     * @generated from field: string federated_token_file = 5;
     */
    value: string;
    case: "federatedTokenFile";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message delta_sharing.credentials.v1.AzureServicePrincipal
 */
export type AzureServicePrincipalJson = {
  /**
   * The directory ID corresponding to the Azure Active Directory (AAD) tenant of the application.
   *
   * @generated from field: string directory_id = 1;
   */
  directoryId?: string;

  /**
   * The application ID of the application registration within the referenced AAD tenant.
   *
   * @generated from field: string application_id = 2;
   */
  applicationId?: string;

  /**
   * The client secret generated for the above app ID in AAD.
   *
   * @generated from field: string client_secret = 3;
   */
  clientSecret?: string;

  /**
   * Location of the file containing a federated token.
   *
   * Specifically useful for workload identity federation.
   *
   * @generated from field: string federated_token_file = 5;
   */
  federatedTokenFile?: string;
};

/**
 * Describes the message delta_sharing.credentials.v1.AzureServicePrincipal.
 * Use `create(AzureServicePrincipalSchema)` to create a new message.
 */
export const AzureServicePrincipalSchema: GenMessage<AzureServicePrincipal, AzureServicePrincipalJson> = /*@__PURE__*/
  messageDesc(file_delta_sharing_credentials_v1_models, 0);

/**
 * @generated from message delta_sharing.credentials.v1.AzureManagedIdentity
 */
export type AzureManagedIdentity = Message<"delta_sharing.credentials.v1.AzureManagedIdentity"> & {
  /**
   * @generated from oneof delta_sharing.credentials.v1.AzureManagedIdentity.identifier
   */
  identifier: {
    /**
     * Object id for use with managed identity authentication
     *
     * @generated from field: string object_id = 1;
     */
    value: string;
    case: "objectId";
  } | {
    /**
     * The application ID of the application registration within the referenced AAD tenant.
     *
     * @generated from field: string application_id = 2;
     */
    value: string;
    case: "applicationId";
  } | {
    /**
     * Msi resource id for use with managed identity authentication
     *
     * @generated from field: string msi_resource_id = 3;
     */
    value: string;
    case: "msiResourceId";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message delta_sharing.credentials.v1.AzureManagedIdentity
 */
export type AzureManagedIdentityJson = {
  /**
   * Object id for use with managed identity authentication
   *
   * @generated from field: string object_id = 1;
   */
  objectId?: string;

  /**
   * The application ID of the application registration within the referenced AAD tenant.
   *
   * @generated from field: string application_id = 2;
   */
  applicationId?: string;

  /**
   * Msi resource id for use with managed identity authentication
   *
   * @generated from field: string msi_resource_id = 3;
   */
  msiResourceId?: string;
};

/**
 * Describes the message delta_sharing.credentials.v1.AzureManagedIdentity.
 * Use `create(AzureManagedIdentitySchema)` to create a new message.
 */
export const AzureManagedIdentitySchema: GenMessage<AzureManagedIdentity, AzureManagedIdentityJson> = /*@__PURE__*/
  messageDesc(file_delta_sharing_credentials_v1_models, 1);

/**
 * @generated from message delta_sharing.credentials.v1.CredentialInfo
 */
export type CredentialInfo = Message<"delta_sharing.credentials.v1.CredentialInfo"> & {
  /**
   * The unique identifier of the credential.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The credential name.
   *
   * The name must be unique among storage and service credentials within the metastore.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Indicates the purpose of the credential.
   *
   * @generated from field: delta_sharing.credentials.v1.Purpose purpose = 3;
   */
  purpose: Purpose;

  /**
   * Whether the credential is usable only for read operations.
   *
   * Only applicable when purpose is STORAGE.
   *
   * @generated from field: bool read_only = 4;
   */
  readOnly: boolean;

  /**
   * User-provided free-form text description.
   *
   * @generated from field: optional string comment = 5;
   */
  comment?: string;

  /**
   * Username of current owner of credential.
   *
   * @generated from field: optional string owner = 6;
   */
  owner?: string;

  /**
   * Time at which this credential was created, in epoch milliseconds.
   *
   * @generated from field: optional int64 created_at = 7;
   */
  createdAt?: bigint;

  /**
   * Username of credential creator.
   *
   * @generated from field: optional string created_by = 8;
   */
  createdBy?: string;

  /**
   * Time at which this credential was last updated, in epoch milliseconds.
   *
   * @generated from field: optional int64 updated_at = 9;
   */
  updatedAt?: bigint;

  /**
   * Username of user who last modified credential.
   *
   * @generated from field: optional string updated_by = 10;
   */
  updatedBy?: string;

  /**
   * Whether this credential is the current metastore's root storage credential.
   *
   * Only applicable when purpose is STORAGE.
   *
   * @generated from field: bool used_for_managed_storage = 11;
   */
  usedForManagedStorage: boolean;

  /**
   * The full name of the credential.
   *
   * @generated from field: optional string full_name = 12;
   */
  fullName?: string;

  /**
   * @generated from oneof delta_sharing.credentials.v1.CredentialInfo.credential
   */
  credential: {
    /**
     * @generated from field: delta_sharing.credentials.v1.AzureServicePrincipal azure_service_principal = 100;
     */
    value: AzureServicePrincipal;
    case: "azureServicePrincipal";
  } | {
    /**
     * @generated from field: delta_sharing.credentials.v1.AzureManagedIdentity azure_managed_identity = 101;
     */
    value: AzureManagedIdentity;
    case: "azureManagedIdentity";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message delta_sharing.credentials.v1.CredentialInfo
 */
export type CredentialInfoJson = {
  /**
   * The unique identifier of the credential.
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * The credential name.
   *
   * The name must be unique among storage and service credentials within the metastore.
   *
   * @generated from field: string name = 2;
   */
  name?: string;

  /**
   * Indicates the purpose of the credential.
   *
   * @generated from field: delta_sharing.credentials.v1.Purpose purpose = 3;
   */
  purpose?: PurposeJson;

  /**
   * Whether the credential is usable only for read operations.
   *
   * Only applicable when purpose is STORAGE.
   *
   * @generated from field: bool read_only = 4;
   */
  readOnly?: boolean;

  /**
   * User-provided free-form text description.
   *
   * @generated from field: optional string comment = 5;
   */
  comment?: string;

  /**
   * Username of current owner of credential.
   *
   * @generated from field: optional string owner = 6;
   */
  owner?: string;

  /**
   * Time at which this credential was created, in epoch milliseconds.
   *
   * @generated from field: optional int64 created_at = 7;
   */
  createdAt?: string;

  /**
   * Username of credential creator.
   *
   * @generated from field: optional string created_by = 8;
   */
  createdBy?: string;

  /**
   * Time at which this credential was last updated, in epoch milliseconds.
   *
   * @generated from field: optional int64 updated_at = 9;
   */
  updatedAt?: string;

  /**
   * Username of user who last modified credential.
   *
   * @generated from field: optional string updated_by = 10;
   */
  updatedBy?: string;

  /**
   * Whether this credential is the current metastore's root storage credential.
   *
   * Only applicable when purpose is STORAGE.
   *
   * @generated from field: bool used_for_managed_storage = 11;
   */
  usedForManagedStorage?: boolean;

  /**
   * The full name of the credential.
   *
   * @generated from field: optional string full_name = 12;
   */
  fullName?: string;

  /**
   * @generated from field: delta_sharing.credentials.v1.AzureServicePrincipal azure_service_principal = 100;
   */
  azureServicePrincipal?: AzureServicePrincipalJson;

  /**
   * @generated from field: delta_sharing.credentials.v1.AzureManagedIdentity azure_managed_identity = 101;
   */
  azureManagedIdentity?: AzureManagedIdentityJson;
};

/**
 * Describes the message delta_sharing.credentials.v1.CredentialInfo.
 * Use `create(CredentialInfoSchema)` to create a new message.
 */
export const CredentialInfoSchema: GenMessage<CredentialInfo, CredentialInfoJson> = /*@__PURE__*/
  messageDesc(file_delta_sharing_credentials_v1_models, 2);

/**
 * @generated from enum delta_sharing.credentials.v1.Purpose
 */
export enum Purpose {
  /**
   * @generated from enum value: PURPOSE_UNSPECIFIED = 0;
   */
  PURPOSE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: STORAGE = 1;
   */
  STORAGE = 1,

  /**
   * @generated from enum value: SERVICE = 2;
   */
  SERVICE = 2,
}

/**
 * @generated from enum delta_sharing.credentials.v1.Purpose
 */
export type PurposeJson = "PURPOSE_UNSPECIFIED" | "STORAGE" | "SERVICE";

/**
 * Describes the enum delta_sharing.credentials.v1.Purpose.
 */
export const PurposeSchema: GenEnum<Purpose, PurposeJson> = /*@__PURE__*/
  enumDesc(file_delta_sharing_credentials_v1_models, 0);

