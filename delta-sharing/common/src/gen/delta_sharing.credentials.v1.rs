// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AzureKeyCredential {
    #[prost(string, tag="1")]
    pub account_name: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub account_key: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AzureSasCredential {
    #[prost(string, tag="1")]
    pub account_name: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub sas_token: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AzureClientCredential {
    #[prost(string, tag="1")]
    pub tenant_id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub client_id: ::prost::alloc::string::String,
    #[prost(oneof="azure_client_credential::Credential", tags="3, 4, 5")]
    pub credential: ::core::option::Option<azure_client_credential::Credential>,
}
/// Nested message and enum types in `AzureClientCredential`.
pub mod azure_client_credential {
    #[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Credential {
        #[prost(string, tag="3")]
        ClientSecret(::prost::alloc::string::String),
        #[prost(string, tag="4")]
        ClientCertificate(::prost::alloc::string::String),
        #[prost(string, tag="5")]
        FederatedTokenFile(::prost::alloc::string::String),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AzureCredential {
    #[prost(oneof="azure_credential::Credential", tags="1, 2, 3")]
    pub credential: ::core::option::Option<azure_credential::Credential>,
}
/// Nested message and enum types in `AzureCredential`.
pub mod azure_credential {
    #[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Credential {
        #[prost(message, tag="1")]
        AccountKey(super::AzureKeyCredential),
        #[prost(message, tag="2")]
        Sas(super::AzureSasCredential),
        #[prost(message, tag="3")]
        Client(super::AzureClientCredential),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Credential {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub name: ::prost::alloc::string::String,
    /// Username of current owner of catalog.
    #[prost(string, optional, tag="4")]
    pub owner: ::core::option::Option<::prost::alloc::string::String>,
    /// Time at which this catalog was created, in epoch milliseconds.
    #[prost(int64, optional, tag="5")]
    pub create_at: ::core::option::Option<i64>,
    /// Username of catalog creator.
    #[prost(string, optional, tag="6")]
    pub created_by: ::core::option::Option<::prost::alloc::string::String>,
    /// Time at which this catalog was last updated, in epoch milliseconds.
    #[prost(int64, optional, tag="7")]
    pub update_at: ::core::option::Option<i64>,
    /// Username of user who last modified catalog.
    #[prost(string, optional, tag="8")]
    pub updated_by: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(oneof="credential::Credential", tags="3")]
    pub credential: ::core::option::Option<credential::Credential>,
}
/// Nested message and enum types in `Credential`.
pub mod credential {
    #[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Credential {
        #[prost(message, tag="3")]
        Azure(super::AzureCredential),
    }
}
/// Create a new credential
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateCredentialRequest {
    /// Credential to create.
    #[prost(message, optional, tag="1")]
    pub credential: ::core::option::Option<Credential>,
}
/// Delete a credential
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DeleteCredentialRequest {
    /// Name of credential.
    #[prost(string, tag="1")]
    pub name: ::prost::alloc::string::String,
}
/// Get a credential
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetCredentialRequest {
    /// Name of credential.
    #[prost(string, tag="1")]
    pub name: ::prost::alloc::string::String,
}
include!("delta_sharing.credentials.v1.serde.rs");
// @@protoc_insertion_point(module)