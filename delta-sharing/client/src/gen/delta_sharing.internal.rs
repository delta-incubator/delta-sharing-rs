// @generated
// This file is @generated by prost-build.
/// Dummy message to hold all resources.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Resource {
    #[prost(oneof="resource::Resource", tags="1, 2, 3, 4, 5, 6, 7, 8")]
    pub resource: ::core::option::Option<resource::Resource>,
}
/// Nested message and enum types in `Resource`.
pub mod resource {
    #[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Resource {
        #[prost(message, tag="1")]
        ShareInfo(super::super::sharing::v1::ShareInfo),
        #[prost(message, tag="2")]
        SharingSchemaInfo(super::super::sharing::v1::SharingSchemaInfo),
        #[prost(message, tag="3")]
        SharingTable(super::super::sharing::v1::SharingTable),
        #[prost(message, tag="4")]
        Credential(super::super::credentials::v1::Credential),
        #[prost(message, tag="5")]
        StorageLocation(super::super::credentials::v1::StorageLocation),
        #[prost(message, tag="6")]
        CatalogInfo(super::super::catalogs::v1::CatalogInfo),
        #[prost(message, tag="7")]
        SchemaInfo(super::super::schemas::v1::SchemaInfo),
        #[prost(message, tag="8")]
        TableInfo(super::super::tables::v1::TableInfo),
    }
}
include!("delta_sharing.internal.serde.rs");
// @@protoc_insertion_point(module)