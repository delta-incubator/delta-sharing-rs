syntax = "proto3";

package delta_sharing.v1;

import "delta_sharing/v1/models.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

service DeltaSharingService {
  // List shares accessible to a recipient.
  rpc ListShares(ListSharesRequest) returns (ListSharesResponse) {
    option (google.api.http) = {get: "/shares"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List shares accessible to a recipient."
      tags: [
        "shares",
        "official"
      ]
      operation_id: "ListShares"
    };
  }

  // Get the metadata for a specific share.
  rpc GetShare(GetShareRequest) returns (GetShareResponse) {
    option (google.api.http) = {get: "/shares/{share}"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get the metadata for a specific share."
      tags: [
        "shares",
        "official"
      ]
      operation_id: "GetShare"
    };
  }

  // List the schemas in a share.
  rpc ListSchemas(ListSchemasRequest) returns (ListSchemasResponse) {
    option (google.api.http) = {get: "/shares/{share}/schemas"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List the schemas in a share."
      tags: [
        "shares",
        "official"
      ]
      operation_id: "ListSchemas"
    };
  }

  // List the tables in a given share's schema.
  rpc ListSchemaTables(ListSchemaTablesRequest) returns (ListSchemaTablesResponse) {
    option (google.api.http) = {get: "/shares/{share}/schemas/{schema}/tables"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List the tables in a given share's schema."
      tags: [
        "schemas",
        "official"
      ]
      operation_id: "ListTables"
    };
  }

  // List all the tables under all schemas in a share.
  rpc ListShareTables(ListShareTablesRequest) returns (ListShareTablesResponse) {
    option (google.api.http) = {get: "/shares/{share}/all-tables"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List all the tables under all schemas in a share."
      tags: [
        "shares",
        "official"
      ]
      operation_id: "ListAllTables"
    };
  }

  // Get the current version for a table within a schema.
  rpc GetTableVersion(GetTableVersionRequest) returns (GetTableVersionResponse) {
    option (google.api.http) = {get: "/shares/{share}/schemas/{schema}/tables/{table}/version"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get the current version for a table within a schema."
      tags: [
        "shares",
        "official"
      ]
      operation_id: "GetTableVersion"
    };
  }
}
