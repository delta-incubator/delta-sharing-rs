syntax = "proto3";

package delta_sharing.credentials.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/struct.proto";

message AzureKeyCredential {
  string account_name = 1 [(google.api.field_behavior) = REQUIRED];
  string account_key = 2 [(google.api.field_behavior) = REQUIRED];
}

message AzureSasCredential {
  string account_name = 1 [(google.api.field_behavior) = REQUIRED];
  string sas_token = 2 [(google.api.field_behavior) = REQUIRED];
}

message AzureClientCredential {
  string tenant_id = 1 [(google.api.field_behavior) = REQUIRED];
  string client_id = 2 [(google.api.field_behavior) = REQUIRED];
  oneof credential {
    option (buf.validate.oneof).required = true;

    string client_secret = 3;
    string client_certificate = 4;
    string federated_token_file = 5;
  }
}

message AzureCredential {
  oneof credential {
    option (buf.validate.oneof).required = true;

    AzureKeyCredential account_key = 1;
    AzureSasCredential sas = 2;
    AzureClientCredential client = 3;
  }
}

message Credential {
  string id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  string name = 2 [(google.api.field_behavior) = REQUIRED];
  oneof credential {
    option (buf.validate.oneof).required = true;

    AzureCredential azure = 3;
  }
}

message CreateCredentialRequest {
  Credential credential = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteCredentialRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetCredentialRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

enum StorageType {
  STORAGE_TYPE_UNSPECIFIED = 0;
  STORAGE_TYPE_AZURE = 1;
  STORAGE_TYPE_GOOGLE = 2;
  STORAGE_TYPE_S3 = 3;
}

message StorageLocation {
  string id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  string name = 2 [(google.api.field_behavior) = REQUIRED];
  string url = 3 [(google.api.field_behavior) = REQUIRED];
  StorageType type = 4 [(google.api.field_behavior) = REQUIRED];
  string credential = 5 [(google.api.field_behavior) = REQUIRED];
  optional string description = 6 [(google.api.field_behavior) = OPTIONAL];
  optional google.protobuf.Struct properties = 7 [(google.api.field_behavior) = OPTIONAL];
}

message CreateStorageLocationRequest {
  StorageLocation location = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteStorageLocationRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetStorageLocationRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ListStorageLocationsRequest {
  // The maximum number of results per page that should be returned.
  optional int32 max_results = 2 [
    (buf.validate.field).int32.gt = 0,
    (google.api.field_behavior) = OPTIONAL
  ];

  // Specifies a page token to use. Set pageToken to the nextPageToken returned
  // by a previous list request to get the next page of results.
  optional string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

message ListStorageLocationsResponse {
  repeated StorageLocation items = 1;
  optional string next_page_token = 2;
}
