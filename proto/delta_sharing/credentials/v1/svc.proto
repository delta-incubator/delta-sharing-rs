syntax = "proto3";

package delta_sharing.credentials.v1;

import "buf/validate/validate.proto";
import "delta_sharing/credentials/v1/models.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "openapiv3/annotations.proto";

// Create a new credential
message CreateCredentialRequest {
  // Credential to create.
  Credential credential = 1 [(google.api.field_behavior) = REQUIRED];
}

// Delete a credential
message DeleteCredentialRequest {
  // Name of credential.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

// Get a credential
message GetCredentialRequest {
  // Name of credential.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

// Manage credentials to access external data sources and services
// as well as generate signed urls for the Delta Sharing service.
service CredentialService {
  rpc CreateCredential(CreateCredentialRequest) returns (Credential) {
    option (google.api.http) = {
      post: "/credentials"
      body: "*"
    };
    option (openapi.v3.operation) = {operation_id: "CreateCredential"};
  }

  rpc GetCredential(GetCredentialRequest) returns (Credential) {
    option (google.api.http) = {get: "/credentials/{name}"};
    option (openapi.v3.operation) = {operation_id: "GetCredential"};
  }

  rpc DeleteCredential(DeleteCredentialRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/credentials/{name}"};
    option (openapi.v3.operation) = {
      tags: [
        "credentials",
        "unofficial"
      ]
      operation_id: "DeleteCredential"
    };
  }
}
