syntax = "proto3";

package delta_sharing.sharing.v1;

import "buf/validate/validate.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/struct.proto";

// A share is a logical grouping to share with recipients. A share can be shared with one or multiple recipients.
// A recipient can access all resources in a share. A share may contain multiple schemas.
message Share {
  option (google.api.resource) = {
    type: "sharing.delta.io/Share"
    pattern: "shares/{share}"
    singular: "share"
    plural: "shares"
  };

  // Name of the share.
  string name = 1 [
    (buf.validate.field).string.min_len = 1,
    (google.api.field_behavior) = IDENTIFIER
  ];

  // Unique identifier for the share.
  optional string id = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// A schema is a logical grouping of tables. A schema may contain multiple tables.
message SharingSchema {
  option (google.api.resource) = {
    type: "sharing.delta.io/Schema"
    pattern: "shares/{share}/schemas/{name}"
    singular: "schema"
    plural: "schemas"
  };

  // The name of the schama
  string name = 1 [
    (buf.validate.field).string.min_len = 1,
    (google.api.field_behavior) = IDENTIFIER
  ];

  // The share name that the schema belongs to.
  string share = 2 [
    (buf.validate.field).string.min_len = 1,
    (google.api.resource_reference) = {type: "sharing.delta.io/Share"}
  ];

  // Unique identifier for the schema.
  optional string id = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// A table is a Delta Lake table or a view on top of a Delta Lake table.
message SharingTable {
  option (google.api.resource) = {
    type: "sharing.delta.io/Table"
    pattern: "shares/{share}/schemas/{schema}/tables/{table}"
    singular: "table"
    plural: "tables"
  };

  // The name of the table.
  string name = 1 [
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 255,
    (buf.validate.field).string.pattern = "^[a-z][0-9a-z-]*[0-9a-z]$",
    (google.api.field_behavior) = IDENTIFIER
  ];

  // The schema name that the table belongs to.
  string schema = 2 [
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 255,
    (buf.validate.field).string.pattern = "^[a-z][0-9a-z_]*[0-9a-z]$",
    (google.api.resource_reference) = {type: "sharing.delta.io/Schema"}
  ];

  // The share name that the table belongs to.
  string share = 3 [
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 255,
    (buf.validate.field).string.pattern = "^[a-z][0-9a-z-]*[0-9a-z]$",
    (google.api.resource_reference) = {type: "sharing.delta.io/Share"}
  ];

  // Unique identifier for the table.
  optional string id = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  // A unique identifier for the share this table belongs to.
  optional string share_id = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// A share in a delta sharing service.
//
// A share is a logical grouping to share with recipients.
// It may contain multiple schemas and tables.
message ShareInfo {
  string id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  string name = 2 [
    (buf.validate.field).string.min_len = 1,
    (google.api.field_behavior) = IDENTIFIER
  ];

  optional string description = 3 [(google.api.field_behavior) = OPTIONAL];

  optional google.protobuf.Struct properties = 4 [(google.api.field_behavior) = OPTIONAL];
}

// A schema in a delta sharing service.
//
// A schema is a logical grouping of tables.
// It may contain multiple tables.
message SharingSchemaInfo {
  // Unique identifier for the schema.
  string id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The name of the schema.
  string name = 2 [
    (buf.validate.field).string.min_len = 1,
    (google.api.field_behavior) = IDENTIFIER
  ];

  // The share name that the schema belongs to.
  string share = 3 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.resource_reference) = {type: "sharing.delta.io/Share"}
  ];

  // The unique identifier for the share this schema belongs to.
  optional string share_id = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  // User-provided free-form text description.
  optional string description = 5 [(google.api.field_behavior) = OPTIONAL];

  // A map of key-value properties attached to the securable.
  optional google.protobuf.Struct properties = 6 [(google.api.field_behavior) = OPTIONAL];
}
